{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Pipes/HLLPipe.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/Statistics/Statistics.component.css","webpack:///./src/app/components/Statistics/Statistics.component.html","webpack:///./src/app/components/Statistics/Statistics.component.ts","webpack:///./src/app/components/checklistItems/checklist-items-create/checklist-Items-create.component.css","webpack:///./src/app/components/checklistItems/checklist-items-create/checklist-Items-create.component.html","webpack:///./src/app/components/checklistItems/checklist-items-create/checklist-items-create.component.ts","webpack:///./src/app/components/checklistItems/checklist-items-list/checklist-Items-list.component.css","webpack:///./src/app/components/checklistItems/checklist-items-list/checklist-Items-list.component.html","webpack:///./src/app/components/checklistItems/checklist-items-list/checklist-items-list.component.ts","webpack:///./src/app/components/checklists/checklist-create/checklist-create.component.css","webpack:///./src/app/components/checklists/checklist-create/checklist-create.component.html","webpack:///./src/app/components/checklists/checklist-create/checklist-create.component.ts","webpack:///./src/app/components/checklists/checklist-list/checklist-list.component.css","webpack:///./src/app/components/checklists/checklist-list/checklist-list.component.html","webpack:///./src/app/components/checklists/checklist-list/checklist-list.component.ts","webpack:///./src/app/components/email/email.component.css","webpack:///./src/app/components/email/email.component.html","webpack:///./src/app/components/email/email.component.ts","webpack:///./src/app/components/groups/group-create/group-create.component.css","webpack:///./src/app/components/groups/group-create/group-create.component.html","webpack:///./src/app/components/groups/group-create/group-create.component.ts","webpack:///./src/app/components/groups/group-list/group-list.component.css","webpack:///./src/app/components/groups/group-list/group-list.component.html","webpack:///./src/app/components/groups/group-list/group-list.component.ts","webpack:///./src/app/components/groups/groups-hll/groups-hll.component.css","webpack:///./src/app/components/groups/groups-hll/groups-hll.component.html","webpack:///./src/app/components/groups/groups-hll/groups-hll.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/shared/barchart/barchart.component.css","webpack:///./src/app/components/shared/barchart/barchart.component.html","webpack:///./src/app/components/shared/barchart/barchart.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/two-ways-bindings/two-ways-bindings.component.css","webpack:///./src/app/components/two-ways-bindings/two-ways-bindings.component.html","webpack:///./src/app/components/two-ways-bindings/two-ways-bindings.component.ts","webpack:///./src/app/directives/d3-chart.directive.ts","webpack:///./src/app/directives/google-places.directive.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/checklistItems.service.ts","webpack:///./src/app/services/checklists.service.ts","webpack:///./src/app/services/groups-hll.service.ts","webpack:///./src/app/services/groups.service.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/validators/mime-type.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'HLLPipe'})\r\nexport class HLLPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    let newStr: string = \"Count Distinct of Checklist's words in Description:\" + value + \", (by Checklist's Description)\";\r\n    return newStr;\r\n  }\r\n}","\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { EmailComponent } from './components/email/email.component';\r\n\r\nimport { GroupCreateComponent } from './components/groups/group-create/group-create.component';\r\nimport { GroupListComponent } from './components/groups/group-list/group-list.component';\r\n\r\nimport { ChecklistCreateComponent } from './components/checklists/checklist-create/checklist-create.component';\r\nimport { ChecklistListComponent } from './components/checklists/checklist-list/checklist-list.component';\r\n\r\nimport { ChecklistItemsCreateComponent } from './components/checklistItems/checklist-items-create/checklist-items-create.component';\r\nimport { ChecklistItemsListComponent } from './components/checklistItems/checklist-items-list/checklist-items-list.component';\r\n\r\nimport { GroupsHLLComponent } from './components/groups/groups-hll/groups-hll.component';\r\nimport { StatisticsComponent } from './components/Statistics/Statistics.component';\r\n\r\nconst routes: Routes = [\r\n  //{ path: '', redirectTo: 'login-email', pathMatch: 'full' },\r\n  { path: '', component: EmailComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'login-email', component: EmailComponent },\r\n//Groups\r\n{ path: 'group-create', component: GroupCreateComponent ,canActivate: [AuthGuard]},\r\n  { path: 'group-edit/:groupId', component: GroupCreateComponent ,canActivate: [AuthGuard]},\r\n  { path: 'group-list', component: GroupListComponent ,canActivate: [AuthGuard]},\r\n  { path: 'group-hll', component: GroupsHLLComponent ,canActivate: [AuthGuard]},\r\n  { path: 'Statistics', component: StatisticsComponent ,canActivate: [AuthGuard]},\r\n  \r\n  \r\n//Checklist\r\n  { path: 'checklist-create/:groupId', component: ChecklistCreateComponent ,canActivate: [AuthGuard]},\r\n  { path: 'checklist-edit/:checklistId', component: ChecklistCreateComponent ,canActivate: [AuthGuard]},\r\n  { path: 'checklist-list/:groupId', component: ChecklistListComponent ,canActivate: [AuthGuard]},\r\n//ChecklistItems\r\n  { path: 'checklistItem-create/:checklistId', component: ChecklistItemsCreateComponent ,canActivate: [AuthGuard]},\r\n  { path: 'checklistItem-edit/:checklistItemId', component: ChecklistItemsCreateComponent ,canActivate: [AuthGuard]},\r\n  { path: 'checklistItem-list/:checklistId', component: ChecklistItemsListComponent ,canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n\r\n","module.exports = \"main {\\r\\n  width: 80%;\\r\\n  margin: 1rem auto;\\r\\n}\\r\\n\"","module.exports = \"<app-header></app-header>\\r\\n<main>\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\"","import { Component,OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(\r\n    ) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }  \r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport {\r\n  MatInputModule,\r\n  MatCheckboxModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatExpansionModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule ,\r\n  MatTableModule,\r\n  MatGridListModule\r\n} from \"@angular/material\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HeaderComponent } from \"./components/header/header.component\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { EmailComponent } from './components/email/email.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\n//import { AuthGuard } from './auth.service';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { GroupCreateComponent } from './components/groups/group-create/group-create.component';\r\nimport { GroupListComponent } from './components/groups/group-list/group-list.component';\r\nimport { ChecklistCreateComponent } from './components/checklists/checklist-create/checklist-create.component';\r\nimport { ChecklistListComponent } from './components/checklists/checklist-list/checklist-list.component';\r\nimport { ChecklistItemsCreateComponent } from './components/checklistItems/checklist-items-create/checklist-items-create.component';\r\nimport { ChecklistItemsListComponent } from './components/checklistItems/checklist-items-list/checklist-items-list.component';\r\nimport { GroupsHLLComponent } from './components/groups/groups-hll/groups-hll.component';\r\nimport { HLLPipe } from './Pipes/HLLPipe';\r\nimport { StatisticsComponent } from './components/Statistics/Statistics.component';\r\nimport { BarchartComponent } from './components/shared/barchart/barchart.component';\r\nimport { TwoWaysBindingsComponent } from './components/two-ways-bindings/two-ways-bindings.component';\r\nimport { GooglePlacesDirective } from './directives/google-places.directive';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { D3ChartDirective } from './directives/d3-chart.directive';\r\n\r\n//Google Maps API Key= AIzaSyCnqVDFETbVC1F2tK3JN9rRyv0e3S-dIsI\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent, \r\n    EmailComponent, GroupCreateComponent, GroupListComponent, ChecklistListComponent, ChecklistCreateComponent,  ChecklistItemsCreateComponent, ChecklistItemsListComponent, \r\n    SignupComponent, GroupsHLLComponent,\r\n    HLLPipe,\r\n    StatisticsComponent,\r\n    BarchartComponent,\r\n    TwoWaysBindingsComponent,\r\n    GooglePlacesDirective,\r\n    D3ChartDirective\r\n  ],\r\n  imports: [\r\n    AgmCoreModule.forRoot({\r\n      apiKey: \"AIzaSyCnqVDFETbVC1F2tK3JN9rRyv0e3S\",\r\n      libraries: [\"places\"]\r\n    }),\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebase, 'angular-auth-firebase'),\r\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features    \r\n    \r\n  ],\r\n  providers: [AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \".d3-chart {\\r\\n    width: 100%;\\r\\n    height: 400px;\\r\\n  }\\r\\n  \\r\\n  .d3-chart .axis path,\\r\\n  .d3-chart .axis line {\\r\\n    stroke: #999;\\r\\n  }\\r\\n  \\r\\n  .d3-chart .axis text {\\r\\n    fill: #999;\\r\\n  }\"","module.exports = \"<h3> Statistics</h3>\\r\\n<span>Hyper Log Log Count Distinct:</span>\\r\\n<br>\\r\\n<app-groups-hll></app-groups-hll>\\r\\n<br>\\r\\n<br>\\r\\n<h3>Checklists by Group - Bar Chart</h3>\\r\\n<br>\\r\\n<!--\\r\\n<app-barchart *ngIf=\\\"chartData\\\" [data]=\\\"chartData\\\"></app-barchart>\\r\\n-->\\r\\n\\r\\n<div  D3Chart #chart2  [data]=\\\"chartData\\\"></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BarchartComponent } from '../shared/barchart/barchart.component';\r\nimport { GroupsHLLService } from \"../../services/groups-hll.service\";\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\n\r\n@Component({\r\n  selector: 'Statistics',\r\n  templateUrl: './Statistics.component.html',\r\n  styleUrls: ['./Statistics.component.css']\r\n})\r\n\r\nexport class StatisticsComponent implements OnInit {\r\n  chartData: Array<any>;\r\n\r\n  constructor(public groupsService :GroupsHLLService) {}\r\n\r\n  ngOnInit() {\r\n    /*\r\n    // give everything a chance to get loaded before starting the animation to reduce choppiness\r\n    setTimeout(() => {\r\n      this.generateData();\r\n\r\n      // change the data periodically\r\n      setInterval(() => this.generateData(), 3000);\r\n    }, 1000);\r\n*/\r\n    this.generateData();\r\n\r\n  }\r\n\r\n  generateData() {\r\n    this.chartData = [];\r\n    this.groupsService.getGroupChecklistsCountTop10().subscribe(groupData => {\r\n      const groups = JSON.stringify(groupData);\r\n      //console.log(groupData);\r\n\r\n      var arr:Array<any>;\r\n      arr = JSON.parse(groups, (key, value) => {\r\n        if (typeof value === 'string') {\r\n          return value.toUpperCase();\r\n        }\r\n        return value;\r\n      });\r\n      //console.log(arr);\r\n\r\n\r\n      this.chartData = [];\r\n      var item=[];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        item=arr.pop();\r\n        this.chartData.push([\r\n          item[\"title\"],\r\n          item[\"ChecklistsCount\"]\r\n        ]);\r\n      }\r\n\r\n     })\r\n/*\r\n    this.chartData = [];\r\n    for (let i = 0; i < (8 + Math.floor(Math.random() * 10)); i++) {\r\n      this.chartData.push([\r\n        `Index ${i}`,\r\n        Math.floor(Math.random() * 100)\r\n      ]);\r\n      //console.log(`Index ${i}`);\r\n    }\r\n    */\r\n  }\r\n}\r\n","module.exports = \"span.header {\\r\\n    font-style: italic;\\r\\n    font-weight: bold\\r\\n}\\r\\n\\r\\ndiv.textarea {\\r\\n    width: 100%;  \\r\\n  }\\r\\n\\r\\ntextarea {\\r\\n      width: 100%;  \\r\\n    }\\r\\n\\r\\nmat-form-field {\\r\\n      width: 100%;\\r\\n    }\\r\\n\\r\\ninput.text {\\r\\n    width: 100%;  \\r\\n  }\\r\\n  \"","module.exports = \"<mat-card>Checklist Item Info.\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSaveChecklistItems()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <!--\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"checklistId\\\" [value]=\\\"checklistId\\\" placeholder=\\\"Checklist ID\\\">\\r\\n    </mat-form-field> \\r\\n    -->\\r\\n    <br>\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"ChecklistItems Title\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a checklistItems title.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <!--\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\">\\r\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\">\\r\\n    </div>\\r\\n    -->\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"4\\\" formControlName=\\\"description\\\" placeholder=\\\"Item Description\\\"></textarea>\\r\\n      <mat-error *ngIf=\\\"form.get('description').invalid\\\">Please enter an Item description.</mat-error>\\r\\n    </mat-form-field>\\r\\n      <br>\\r\\n      <input id=\\\"isDone\\\" type=\\\"checkbox\\\" [checked]='isDone' formControlName=\\\"isDone\\\" placeholder=\\\"Done\\\" title=\\\"Done\\\" value=\\\"Done?\\\"> \\r\\n      <label for=\\\"isDone\\\">Done?</label>\\r\\n\\r\\n      <!-- <input type=\\\"checkbox\\\" [checked]=\\\"task.isDone\\\" (click)=\\\"updateStatus(task)\\\"> -->\\r\\n<!--\\r\\n       <mat-form-field>\\r\\n        <mat-checkbox id=\\\"isDone\\\" formControlName=\\\"isDone\\\" (indeterminateChange)=\\\"OnIndeterminateChange($event)\\\"\\r\\n        [(checked)]=\\\"isDone\\\" >Done</mat-checkbox>\\r\\n      </mat-form-field>\\r\\n-->\\r\\n      <br>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save ChecklistItems</button>\\r\\n    <a mat-button routerLink=\\\"/checklist-edit/{{checklistId}}\\\" color=\\\"primary\\\" routerLinkActive=\\\"mat-accent\\\">Go back</a>\\r\\n\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n\r\nimport { ChecklistItemsService } from \"../../../services/checklistItems.service\";\r\nimport { ChecklistItem } from \"../../../Model/checklistItem.model\";\r\nimport { mimeType } from \"../../../validators/mime-type.validator\";\r\n\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { group } from \"@angular/animations\";\r\n\r\n@Component({\r\n  selector: 'app-checklistItem-create',\r\n  templateUrl: './checklist-Items-create.component.html',\r\n  styleUrls: ['./checklist-Items-create.component.css']\r\n})\r\nexport class ChecklistItemsCreateComponent implements OnInit {\r\n  enteredTitle = \"\";\r\n  enteredContent = \"\";\r\n  checklistItems: ChecklistItem;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  private mode = \"create\";\r\n  private checklistItemId: string;\r\n  private checklistId: string;\r\n  private isDone: boolean=false;\r\n\r\n  \r\n  constructor(\r\n    public checklistItemsService: ChecklistItemsService,\r\n    public route: ActivatedRoute,\r\n    public auth: AuthService//,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      checklistId: new FormControl(null,null),\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)]\r\n      }),\r\n      description: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, {\r\n        //validators: [Validators.required],\r\n        //asyncValidators: [mimeType]\r\n      }),\r\n      isDone: new FormControl(null,null)\r\n    });\r\n\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has(\"checklistId\"))\r\n      {\r\n        this.checklistId = paramMap.get(\"checklistId\");\r\n        this.form.value.checklistId = this.checklistId;\r\n      }\r\n      else\r\n      {\r\n        this.checklistId=\"-1\";\r\n      }\r\n\r\n      //console.log(\"this.checklistId\" + this.checklistId);\r\n\r\n      if (paramMap.has(\"checklistItemId\")) {\r\n        this.mode = \"edit\";\r\n        this.checklistItemId = paramMap.get(\"checklistItemId\");\r\n        this.isLoading = true;\r\n        this.checklistItemsService.getChecklistItem(this.checklistItemId).subscribe(checklistItemsData => {\r\n          this.isLoading = false;\r\n          //console.log(\"checklistItemsData.checklistId\" + checklistItemsData.checklistId);\r\n          //console.log(\"checklistItemsData.isDone\" + checklistItemsData.isDone);\r\n          //console.log(checklistItemsData)\r\n          //console.log(\"checklistItemsData.description\" + checklistItemsData.description);\r\n\r\n          this.checklistItems = {\r\n            id: checklistItemsData._id,\r\n            title: checklistItemsData.title,\r\n            description: (checklistItemsData.description+\"\"==\"undefined\"?\"\":checklistItemsData.description+\"\"),\r\n            imagePath: \"\",//checklistItemsData.imagePath,\r\n            checklistId: checklistItemsData.checklistId,\r\n            isDone: (checklistItemsData.isDone==true)\r\n          };\r\n          \r\n          this.isDone=this.checklistItems.isDone;\r\n          \r\n          if(this.checklistId==\"-1\")\r\n            this.checklistId = checklistItemsData.checklistId;\r\n\r\n          this.form.setValue({\r\n            //id: this.checklistItems.id,\r\n            title: this.checklistItems.title,\r\n            description: this.checklistItems.description,\r\n            image: this.checklistItems.imagePath,\r\n            checklistId: this.checklistItems.checklistId,\r\n            isDone: this.checklistItems.isDone\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = \"create\";\r\n        this.checklistItemId = null;\r\n        //this.form.value.checklistId   = this.checklistId;\r\n      }\r\n    });\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get(\"image\").updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSaveChecklistItems() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === \"create\") {\r\n      if(this.form.value.checklistId==null )\r\n        this.form.value.checklistId =this.checklistId;\r\n\r\n      //console.log(\"this.form.value.checklistId \" + this.form.value.checklistId );\r\n      //console.log(\"this.form.value.isDone     \" + this.form.value.isDone    + \" / (this.form.value.isDone  == true)\" + (this.form.value.isDone  == true));\r\n      this.checklistItemsService.addChecklistItems(\r\n        this.form.value.title,\r\n        this.form.value.description,\r\n        null,//this.form.value.image,\r\n        this.form.value.checklistId,\r\n        (this.form.value.isDone  == true)\r\n      );\r\n    } else {\r\n      //console.log(\"this.form.value.checklistId \" + this.form.value.checklistId );\r\n      //console.log(\"this.form.value.isDone     \" + this.form.value.isDone     );\r\n      //console.log(\"this.form.value.title     \" + this.form.value.title     );\r\n      //console.log(\"this.form.value.description     \" + this.form.value.description     );\r\n      \r\n      this.checklistItemsService.updateChecklistItems(\r\n        this.checklistItemId,\r\n        this.form.value.title,\r\n        this.form.value.description,\r\n        \"\",//this.form.value.image,\r\n        this.form.value.checklistId ,\r\n        (this.form.value.isDone  == true)  ,\r\n        true   \r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  OnIndeterminateChange($event){\r\n    //console.log($event); \r\n    this.isDone=$event;//true or false\r\n }\r\n \r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  td, th {\\r\\n    width: 25%;\\r\\n  }\\r\\n  \\r\\n  span.header {\\r\\n    font-style: italic;\\r\\n    font-weight: bold\\r\\n}\"","module.exports = \"<span class=\\\"header\\\">Checklist Items</span>\\r\\n<a mat-button color=\\\"primary\\\"  [routerLink]=\\\"['/checklistItem-create', checklistId]\\\"routerLinkActive=\\\"mat-accent\\\">New Checklist Item</a>\\r\\n<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\"  *ngIf=\\\"checklistItems.length > 0 && !isLoading\\\" matSort>\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <!--\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/checklistItem-edit', row.id]\\\">{{row.id}}</a>  </td>\\r\\n    </ng-container>\\r\\n    -->\\r\\n    <!-- Checkbox Column -->\\r\\n  <ng-container matColumnDef=\\\"select\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>\\r\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n      </mat-checkbox>\\r\\n    </th>\\r\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    (change)=\\\"toggle(row)\\\"\\r\\n                    [checked]=\\\"row.isDone\\\">\\r\\n      </mat-checkbox>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n    <!-- Progress Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Status Column -->\\r\\n    <ng-container matColumnDef=\\\"isDone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Done? </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\" > {{(row.isDone==true?'Done':'')}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"EDIT\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\\\"width: 15px\\\"> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"  style=\\\"width: 15px\\\"> <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/checklistItem-edit', row.id]\\\">EDIT</a>  </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"DELETE\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header style=\\\"width: 15px\\\"> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"  style=\\\"width: 15px\\\"> <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(row.id)\\\">DELETE</button>  </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" *ngIf=\\\"checklistItems.length \\\"></mat-paginator>\\r\\n\\r\\n  <div *ngIf=\\\"checklistItems.length <= 0 && !isLoading\\\"> \\r\\n    <p class=\\\"info-text mat-body-1\\\" >No ChecklistItems added yet!</p>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!--\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"checklistItems.length > 0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let checklistItems of checklistItems\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{ checklistItems.title }}\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"checklistItems-image\\\">\\r\\n      <img [src]=\\\"checklistItems.imagePath\\\" [alt]=\\\"checklistItems.title\\\">\\r\\n    </div>\\r\\n    <p>{{ checklistItems.content }}</p>\\r\\n    <mat-action-row>\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/checklistItem-edit', checklistItems.id]\\\">EDIT</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(checklistItems.id)\\\">DELETE</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-paginator [length]=\\\"totalChecklistItems\\\" [pageSize]=\\\"checklistItemsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\"\\r\\n  *ngIf=\\\"checklistItems.length > 0\\\"></mat-paginator>\\r\\n\\r\\n<div *ngIf=\\\"checklistItems.length <= 0 && !isLoading\\\"> \\r\\n  <p class=\\\"info-text mat-body-1\\\" >No ChecklistItems added yet!</p>\\r\\n</div>\\r\\n-->\"","import { Component, OnInit, OnDestroy, Input, Output ,ViewChild} from \"@angular/core\";\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\n\r\nimport { PageEvent } from \"@angular/material\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { ChecklistItem } from \"../../../Model/checklistItem.model\";\r\nimport { ChecklistItemsService } from \"../../../services/checklistItems.service\";\r\n\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-checklistItem-list\",\r\n  templateUrl: \"./checklist-Items-list.component.html\",\r\n  styleUrls: [\"./checklist-Items-list.component.css\"]\r\n})\r\nexport class ChecklistItemsListComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns: string[] = ['select', 'title', 'description', 'isDone', 'EDIT', 'DELETE'];\r\n\r\n  //@Input() ChecklistItemsID:number=-1;\r\n  //@Output() ChecklistItemsId: string;\r\n\r\n  @Input() checklistId: string ='-1';\r\n\r\n  checklistItems: ChecklistItem[] = [];\r\n  isLoading = false;\r\n  totalChecklistItems = 0;\r\n  checklistItemsPerPage = 10;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1, 2, 5, 10];\r\n  private checklistItemsSub: Subscription;\r\n  dataSource: MatTableDataSource<ChecklistItem>;\r\n  selection = new SelectionModel<ChecklistItem>(true, []);\r\n\r\n  constructor(public checklistItemsService: ChecklistItemsService,\r\n    public route: ActivatedRoute,) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n\r\n      this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n        //console.log(\"paramMap.has(checklistId)\" + paramMap.has(\"checklistId\"));\r\n        if (paramMap.has(\"checklistId\"))\r\n        {\r\n//          if(this.checklistId==\"-1\") \r\n            this.checklistId = paramMap.get(\"checklistId\");\r\n        }\r\n      \r\n          //console.log(\"this.checklistId - list\" + this.checklistId);\r\n\r\n          this.checklistItemsService.getChecklistItems(this.checklistItemsPerPage, this.currentPage, this.checklistId);\r\n          this.checklistItemsSub = this.checklistItemsService\r\n            .getChecklistItemsUpdateListener()\r\n            .subscribe((checklistItemsData: {checklistItems: ChecklistItem[], checklistItemsCount: number}) => {\r\n              this.isLoading = false;\r\n              this.totalChecklistItems = checklistItemsData.checklistItemsCount;\r\n              this.checklistItems = checklistItemsData.checklistItems;\r\n              this.dataSource = new MatTableDataSource(this.checklistItems);\r\n            });\r\n        });      \r\n           // this.dataSource.paginator = this.paginator;\r\n           // this.dataSource.sort = this.sort;            \r\n  }\r\n\r\n  \r\n\r\n/** Whether the number of selected elements matches the total number of rows. */\r\nisAllSelected() {\r\n  const numSelected = this.selection.selected.length;\r\n  const numRows = this.dataSource.data.length;\r\n  return numSelected === numRows;\r\n}\r\n\r\n/** Selects all rows if they are not all selected; otherwise clear selection. */\r\nmasterToggle() {\r\n  if(this.isAllSelected() )\r\n      {\r\n        this.selection.clear();\r\n        this.dataSource.data.forEach(row => \r\n          {\r\n            this.selection.select(row);\r\n            row.isDone=false;\r\n            this.checklistItemsService.updateChecklistItems(\r\n              row.id,\r\n              row.title,\r\n              row.description,\r\n              row.imagePath,\r\n              row.checklistId ,\r\n              row.isDone, false       \r\n              );\r\n            }\r\n          );\r\n        }\r\n      else\r\n      {\r\n        this.dataSource.data.forEach(row => \r\n        {\r\n          this.selection.select(row);\r\n          row.isDone=true;\r\n          this.checklistItemsService.updateChecklistItems(\r\n            row.id,\r\n            row.title,\r\n            row.description,\r\n            row.imagePath,\r\n            row.checklistId ,\r\n            row.isDone, false       \r\n            );\r\n          }\r\n        );\r\n      }\r\n}\r\n\r\ntoggle(row: ChecklistItem) {\r\n        this.selection.toggle(row);\r\n        //console.log(\"row.isDone\" + row.isDone)\r\n        row.isDone= !row.isDone;\r\n        this.checklistItemsService.updateChecklistItems(\r\n          row.id,\r\n          row.title,\r\n          row.description,\r\n          row.imagePath,\r\n          row.checklistId ,\r\n          row.isDone, false       \r\n          );\r\n          //console.log(\"togle \" + row.isDone);\r\n}\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.checklistItemsPerPage = pageData.pageSize;\r\n    this.checklistItemsService.getChecklistItems(this.checklistItemsPerPage, this.currentPage, this.checklistId);\r\n  }\r\n\r\n  onDelete(checklistItemsId: string) {\r\n    this.isLoading = true;\r\n    this.checklistItemsService.deleteChecklistItems(checklistItemsId).subscribe(() => {\r\n      this.checklistItemsService.getChecklistItems(this.checklistItemsPerPage, this.currentPage, this.checklistId);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checklistItemsSub.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"div.textarea {\\r\\n    width: 100%;  \\r\\n  }\\r\\n  \\r\\n  textarea {\\r\\n      width: 100%;  \\r\\n    }\\r\\n  \\r\\n  mat-form-field {\\r\\n      width: 100%;\\r\\n    }\\r\\n  \\r\\n  span.header {\\r\\n      font-style: italic;\\r\\n      font-weight: bold\\r\\n  }\\r\\n  \"","module.exports = \"<mat-card>Checklist Info.\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSaveChecklist()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <!--\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"group\\\" [value]=\\\"groupId\\\" placeholder=\\\"Group ID\\\">\\r\\n    </mat-form-field> <br>\\r\\n    -->\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Checklist Title\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a checklist title.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <!--\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\">\\r\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\">\\r\\n    </div>\\r\\n    -->\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"4\\\" formControlName=\\\"description\\\" placeholder=\\\"Checklist Description\\\"></textarea>\\r\\n      <mat-error *ngIf=\\\"form.get('description').invalid\\\">Please enter a checklist description.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save Checklist</button>\\r\\n\\r\\n    <a mat-button  *ngIf=\\\"checklistId\\\" color=\\\"primary\\\" [routerLink]=\\\"['/checklistItem-list', checklistId]\\\">Checklist Items</a> \\r\\n    <a mat-button routerLink=\\\"/group-edit/{{groupId}}\\\" color=\\\"primary\\\" routerLinkActive=\\\"mat-accent\\\">Go back</a>\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n    <br>\\r\\n    <app-checklistItem-list  *ngIf=\\\"checklistId\\\" checklistId={{checklistId}} >\\r\\n\\r\\n    </app-checklistItem-list>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n\r\nimport { ChecklistsService } from \"../../../services/checklists.service\";\r\nimport { Checklist } from \"../../../Model/checklist.model\";\r\nimport { mimeType } from \"../../../validators/mime-type.validator\";\r\n\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { group } from \"@angular/animations\";\r\n\r\n@Component({\r\n  selector: 'app-checklist-create',\r\n  templateUrl: './checklist-create.component.html',\r\n  styleUrls: ['./checklist-create.component.css']\r\n})\r\nexport class ChecklistCreateComponent implements OnInit {\r\n  enteredTitle = \"\";\r\n  enteredContent = \"\";\r\n  checklist: Checklist;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  private mode = \"create\";\r\n  private checklistId: string;\r\n  private groupId = \"-1\";\r\n\r\n  \r\n  constructor(\r\n    public checklistsService: ChecklistsService,\r\n    public route: ActivatedRoute,\r\n    public auth: AuthService//,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      group: new FormControl(null,null),\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)]\r\n      }),\r\n      description: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, {\r\n        //validators: [Validators.required],\r\n        //asyncValidators: [mimeType]\r\n      })\r\n    });\r\n\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n\r\n      //In New mode\r\n      if (paramMap.has(\"groupId\"))\r\n      {\r\n        this.groupId = paramMap.get(\"groupId\");\r\n        this.form.value.group = this.groupId;\r\n      }\r\n      else\r\n      {\r\n        this.groupId=\"-1\";\r\n      }\r\n\r\n      //console.log(\"--this.groupId\" + this.groupId);\r\n//In Edit mode\r\n      if (paramMap.has(\"checklistId\")) {\r\n        this.mode = \"edit\";\r\n        this.checklistId = paramMap.get(\"checklistId\");\r\n        this.isLoading = true;\r\n        this.checklistsService.getChecklist(this.checklistId).subscribe(checklistData => {\r\n          this.isLoading = false;\r\n          //console.log(\"checklistData.group\" + checklistData.group)\r\n          this.checklist = {\r\n            id: checklistData._id,\r\n            title: checklistData.title,\r\n            description: checklistData.description,\r\n            imagePath: checklistData.imagePath,\r\n            group: checklistData.group,\r\n            checklistItems: null\r\n          };\r\n          \r\n          if(this.groupId==\"-1\")\r\n            this.groupId = checklistData.group;\r\n\r\n            //console.log(\"this.groupId\" + this.groupId);\r\n                        \r\n          this.form.setValue({\r\n            //id: this.checklist.id,\r\n            title: this.checklist.title,\r\n            description: this.checklist.description,\r\n            image: \"\",//this.checklist.imagePath,\r\n            group: this.checklist.group//,\r\n            //checklistItems: null\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = \"create\";\r\n        this.checklistId = null;\r\n        //this.form.value.group   = this.groupId;\r\n      }\r\n    });\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get(\"image\").updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSaveChecklist() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === \"create\") {\r\n      if(this.form.value.group==null )\r\n        this.form.value.group =this.groupId;\r\n\r\n      //console.log(\"this.form.value.group \" + this.form.value.group );\r\n      this.checklistsService.addChecklist(\r\n        this.form.value.title,\r\n        this.form.value.description,\r\n        null,//this.form.value.image,\r\n        this.form.value.group        \r\n      );\r\n    } else {\r\n      if(this.form.value.group==null )\r\n      this.form.value.group =this.groupId;\r\n\r\n    //console.log(\"this.form.value.group \" + this.form.value.group );\r\n\r\n      this.checklistsService.updateChecklist(\r\n        this.checklistId,\r\n        this.form.value.title,\r\n        this.form.value.description,\r\n        null,//this.form.value.image,\r\n        this.form.value.group ,\r\n        null       \r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n}\r\n","module.exports = \"span.header {\\r\\n    font-style: italic;\\r\\n    font-weight: bold\\r\\n}\"","module.exports = \"<span class=\\\"header\\\">Group Checklists</span>\\r\\n<a mat-button color=\\\"primary\\\"  [routerLink]=\\\"['/checklist-create', groupId]\\\"routerLinkActive=\\\"mat-accent\\\">New Checklist</a>\\r\\n<br>\\r\\n  <input matInput #filterValue  (keyup)=\\\"applyFilter($event.target.value)\\\"  placeholder=\\\"Filter by Checklist Title\\\">\\r\\n  <br>\\r\\n  <span>Filter by:</span> \\r\\n  <input id=\\\"filterByTitle\\\" type=\\\"checkbox\\\" (change)=\\\"applyFilterType($event.target.checked, filterValue.value, 'filterByTitle')\\\" [checked]='filterByTitle' placeholder=\\\"By Title\\\" title=\\\"By Title\\\" value=\\\"By Title\\\"> \\r\\n  <label for=\\\"filterByTitle\\\">By Title</label>\\r\\n  <input id=\\\"filterByDesc\\\" type=\\\"checkbox\\\" (change)=\\\"applyFilterType($event.target.checked, filterValue.value, 'filterByDesc')\\\" [checked]='filterByDesc' placeholder=\\\"By Description\\\" title=\\\"By Description\\\" value=\\\"By Description\\\"> \\r\\n  <label for=\\\"filterByDesc\\\">By Description</label>\\r\\n\\r\\n  <br>\\r\\n  <br>\\r\\n<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"checklists.length > 0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let checklist of checklists\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{ checklist.title }}\\r\\n    </mat-expansion-panel-header>\\r\\n    <!--\\r\\n    <div class=\\\"checklist-image\\\">\\r\\n      <img [src]=\\\"checklist.imagePath\\\" [alt]=\\\"checklist.title\\\">\\r\\n    </div>\\r\\n    -->\\r\\n    <p>{{ checklist.description }}</p>\\r\\n    <mat-action-row>\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/checklist-edit', checklist.id]\\\">EDIT</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(checklist.id)\\\">DELETE</button>\\r\\n      <!--<a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/checklist-list', checklist.id]\\\">Checklists</a>-->\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-paginator [length]=\\\"totalChecklists\\\" [pageSize]=\\\"checklistsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\"\\r\\n  *ngIf=\\\"checklists.length > 0\\\"></mat-paginator>\\r\\n\\r\\n<div *ngIf=\\\"checklists.length <= 0 && !isLoading\\\"> \\r\\n  <p class=\\\"info-text mat-body-1\\\" >No Checklist added yet!</p>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, Input, Output } from \"@angular/core\";\r\nimport { PageEvent } from \"@angular/material\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { Checklist } from \"../../../Model/checklist.model\";\r\nimport { ChecklistsService } from \"../../../services/checklists.service\";\r\n\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-checklist-list\",\r\n  templateUrl: \"./checklist-list.component.html\",\r\n  styleUrls: [\"./checklist-list.component.css\"]\r\n})\r\nexport class ChecklistListComponent implements OnInit, OnDestroy {\r\n\r\n  //@Input() ChecklistID:number=-1;\r\n  //@Output() ChecklistId: string;\r\n\r\n  @Input() groupId: string ='-1';\r\n\r\n  checklists: Checklist[] = [];\r\n  \r\n  isLoading = false;\r\n  totalChecklists = 0;\r\n  checklistsPerPage = 10;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1, 2, 5, 10];\r\n  private checklistsSub: Subscription;\r\n\r\n filterByTitle : boolean=true;\r\n filterByDesc : boolean=true;\r\n filterValue: string;\r\n checklistsAll: Checklist[] = [];\r\n\r\n  constructor(public checklistsService: ChecklistsService,\r\n    public route: ActivatedRoute,) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n\r\n      this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n        if (paramMap.has(\"groupId\"))\r\n        {\r\n//          if(this.groupId==\"-1\") \r\n            this.groupId = paramMap.get(\"groupId\");\r\n        }\r\n      \r\n          //console.log(\"this.groupId - list\" + this.groupId);\r\n\r\n          this.checklistsService.getChecklists(this.checklistsPerPage, this.currentPage, this.groupId);\r\n          this.checklistsSub = this.checklistsService\r\n            .getChecklistUpdateListener()\r\n            .subscribe((checklistData: {checklists: Checklist[], checklistCount: number}) => {\r\n              this.isLoading = false;\r\n              this.totalChecklists = checklistData.checklistCount;\r\n              this.checklists = checklistData.checklists;\r\n              this.checklistsAll  = checklistData.checklists;\r\n            });\r\n      \r\n        });      \r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.checklistsPerPage = pageData.pageSize;\r\n    //this.checklistsService.getChecklists(this.checklistsPerPage, this.currentPage, this.groupId);\r\n    this.applyFilter(this.filterValue);\r\n  }\r\n\r\n  onDelete(checklistId: string) {\r\n    this.isLoading = true;\r\n    this.checklistsService.deleteChecklist(checklistId).subscribe(() => {\r\n      this.checklistsService.getChecklists(this.checklistsPerPage, this.currentPage, this.groupId);\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue) {\r\n    ////console.log(\"filter: \" + filterValue);    \r\n    ////console.log(this.filterByTitle);\r\n    ////console.log(this.filterByDesc);\r\n/*\r\n    if(filterValue==\"\")\r\n      this.groups = this.groupsAll;\r\n    else\r\n      this.groups = this.groupsAll.filter(\r\n        //this.filter\r\n          (group: Group) => \r\n          (\r\n            ((this.filterByTitle==true) && group.title.trim().toLowerCase() == filterValue.trim().toLowerCase())\r\n            ||\r\n            ((this.filterByDesc==true) && group.description.trim().toLowerCase() == filterValue.trim().toLowerCase())\r\n            ||\r\n            ((this.filterByImage==true) && group.imagePath.trim().toLowerCase().indexOf(filterValue.trim().toLowerCase())>0)\r\n          ) \r\n        );\r\n\r\n*/\r\n\r\n\r\n//12. To do an or check with multiple keys use $or\r\n//db.testdb.find({\"$or\" : [{\"status\" : \"dropout\"}, {\"gpa\" : {\"$lt\" : 3.0}}]}, {\"name\" : 1, \"_id\" : 0})\r\n \r\n  this.filterValue=filterValue;\r\n  var filterarr:string [] =[];\r\n  var filter : string;\r\n    if(filterValue==\"\")\r\n      this.checklists = this.checklistsAll;\r\n    else\r\n    {\r\n      if ((this.filterByTitle==true) )\r\n      filterarr.push('{\"title\" : \"' + filterValue + '\"}');\r\n      if ((this.filterByDesc==true) )\r\n      filterarr.push('{\"description\" : \"' + filterValue + '\"}');\r\n      //if ((this.filterByImage==true) )\r\n      //filterarr.push('{\"imagePath\" : \"' + filterValue + '\"}');\r\n    } \r\n    if(filterarr.length>0)\r\n    {\r\n      filter = filterarr.join(\",\");\r\n      filter = '{\"$or\" : [' + filter + ']}';\r\n      this.checklistsService.getChecklists(this.checklistsPerPage, this.currentPage, this.groupId,filter);\r\n    }\r\n    else\r\n      this.checklistsService.getChecklists(this.checklistsPerPage, this.currentPage, this.groupId);\r\n\r\n \r\n\r\n    //if (this.dataSource.paginator) {\r\n    //  this.dataSource.paginator.firstPage();\r\n    //}\r\n  }\r\n\r\n  applyFilterType(checked:boolean, filterValue:string, type:string){\r\n\r\n    ////console.log(\"checked=\" + checked);\r\n    ////console.log(\"filterValue=\" + filterValue);\r\n    ////console.log(\"type=\" + type);\r\n\r\n    if(type==\"filterByTitle\")\r\n      this.filterByTitle=checked;\r\n      if(type==\"filterByDesc\")\r\n      this.filterByDesc=checked;\r\n      //if(type==\"filterByImage\")\r\n      //this.filterByImage=checked;\r\n\r\n      this.filterValue=filterValue;\r\n\r\n      this.applyFilter(this.filterValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checklistsSub.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.image-preview {\\r\\n  height: 5rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.image-preview img {\\r\\n  height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  \\r\\n<div class=\\\"form-container\\\">\\r\\n<!--  <a routerLink=\\\"/login\\\" id=\\\"goback\\\">Go back</a> -->\\r\\n  <h2>Wellcom!</h2>\\r\\n\\r\\n  <span class=\\\"error\\\" *ngIf=\\\"error\\\" >{{ error }}</span>\\r\\n\\r\\n  <form   [formGroup]=\\\"form\\\" (submit)=\\\"onSubmit()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" formControlName=\\\"email\\\" placeholder=\\\"Email address..\\\">\\r\\n          <mat-error *ngIf=\\\"form.get('email').invalid\\\">Please enter an Email address.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n            <mat-error *ngIf=\\\"form.get('password').invalid\\\">Please enter a valid password.</mat-error>\\r\\n        </mat-form-field>\\r\\n    \\r\\n        <div class=\\\"row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"form.get('password').invalid\\\" >Log in</button> \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            &nbsp;\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <a routerLink=\\\"/signup\\\" class=\\\"alc\\\">Don't have an account?</a>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n//import { AngularFire, AuthProviders, AuthMethods } from 'angularfire2';\r\nimport { Router } from '@angular/router';\r\n//import { moveIn, fallIn } from '../router.animations';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n//import { AuthGuard } from '../../auth.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n  selector: 'app-email',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.css']//,\r\n  //animations: [moveIn(), fallIn()],\r\n  //host: {'[@moveIn]': ''}\r\n})\r\nexport class EmailComponent implements OnInit {\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  email:String;\r\n  password: String;\r\n\r\n    state: string = '';\r\n    error: any;\r\n\r\n    constructor(public af: AngularFireAuth,private router: Router) {\r\n      \r\n      this.af.authState.subscribe(auth => { \r\n        if(auth) {\r\n          //this.router.navigateByUrl('/groups-list');\r\n        }\r\n      });\r\n  }\r\n\r\n \r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n      //console.log(this.form.value);\r\n      return new Promise<any>((resolve, reject) => {\r\n        this.af.auth.signInWithEmailAndPassword(this.form.value.email, this.form.value.password)\r\n        .then(\r\n        (success) => {\r\n        console.log(success);\r\n        this.router.navigate(['/group-list']);\r\n      }).catch(\r\n        (err) => {\r\n        console.log(err);\r\n        this.error = err;\r\n      });\r\n     });\r\n    \r\n    \r\n  }\r\n \r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(5)]\r\n      }),\r\n      password: new FormControl(null, { validators: [Validators.required, Validators.minLength(6)] }),\r\n      \r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"div.textarea {\\r\\n  width: 100%;  \\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    width: 100%;  \\r\\n  }\\r\\n\\r\\nmat-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\nspan.header {\\r\\n    font-style: italic;\\r\\n    font-weight: bold\\r\\n}\"","module.exports = \"<mat-card>Group Info.\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSaveGroup()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Group Title\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a group title.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <!--<button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button> -->\\r\\n      <span>Pick Image</span>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\">\\r\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\">\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"4\\\" formControlName=\\\"description\\\" placeholder=\\\"Group Description\\\"></textarea>\\r\\n      <mat-error *ngIf=\\\"form.get('description').invalid\\\">Please enter a group description.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save Group</button>\\r\\n    <a mat-button  *ngIf=\\\"groupId\\\" color=\\\"primary\\\" [routerLink]=\\\"['/checklist-list', groupId]\\\">Checklists</a> \\r\\n    <button mat-button *ngIf=\\\"groupId\\\" color=\\\"warn\\\" (click)=\\\"onDelete(group.id)\\\">DELETE</button>\\r\\n    <a mat-button routerLink=\\\"/group-list\\\" color=\\\"primary\\\" routerLinkActive=\\\"mat-accent\\\">Go back</a>\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n    <br>\\r\\n    <app-checklist-list  *ngIf=\\\"groupId\\\" groupId={{groupId}} >\\r\\n\\r\\n    </app-checklist-list>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit,Output } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nimport { GroupsService } from \"../../../services/groups.service\";\r\nimport { Group } from \"../../../Model/group.model\";\r\nimport { mimeType } from \"../../../validators/mime-type.validator\";\r\n\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: \"app-group-create\",\r\n  templateUrl: \"./group-create.component.html\",\r\n  styleUrls: [\"./group-create.component.css\"]\r\n})\r\nexport class GroupCreateComponent implements OnInit {\r\n  enteredTitle = \"\";\r\n  enteredContent = \"\";\r\n  group: Group;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  private mode = \"create\";\r\n  @Output() groupId: string;\r\n\r\n  \r\n  constructor(\r\n    public groupsService: GroupsService,\r\n    public route: ActivatedRoute,\r\n    public auth: AuthService,\r\n    public router2: Router\r\n  ) {\r\n/*      if(this.auth) {\r\n        if(this.auth.isLoggedIn) {\r\n          return;\r\n        }\r\n      }\r\n      //this.router.navigateByUrl('/login-email'); \r\n */  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)]\r\n      }),\r\n      description: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has(\"groupId\")) {\r\n        this.mode = \"edit\";\r\n        this.groupId = paramMap.get(\"groupId\");\r\n        this.isLoading = true;\r\n        this.groupsService.getGroup(this.groupId).subscribe(groupData => {\r\n          this.isLoading = false;\r\n          this.group = {\r\n            id: groupData._id,\r\n            title: groupData.title,\r\n            description: groupData.description,\r\n            imagePath: groupData.imagePath\r\n          };\r\n\r\n          //console.log( this.group);\r\n\r\n          this.imagePreview = groupData.imagePath;\r\n          this.form.setValue({\r\n            title: this.group.title,\r\n            description: this.group.description,\r\n            image: this.group.imagePath\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = \"create\";\r\n        this.groupId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get(\"image\").updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSaveGroup() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === \"create\") {\r\n      this.groupsService.addGroup(\r\n        this.form.value.title,\r\n        this.form.value.description,\r\n        this.form.value.image\r\n      );\r\n    } else {\r\n      this.groupsService.updateGroup(\r\n        this.groupId,\r\n        this.form.value.title,\r\n        this.form.value.description,\r\n        this.form.value.image\r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  onDelete(groupId: string) {\r\n    this.isLoading = true;\r\n    this.groupsService.deleteGroup(groupId).subscribe(() => {\r\n      //this.groupsService.getGroups(this.groupsPerPage, this.currentPage);\r\n      this.router2.navigate(['/group-list']);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"span.header {\\r\\n    font-style: italic;\\r\\n    font-weight: bold\\r\\n}\\r\\n\\r\\n.tax-featured .featured-img {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.tax-featured a {\\r\\n    color: #888;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.tax-featured .featured-img img {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n}\\r\\n\\r\\n.tax-featured .featured-title {\\r\\n    font-size: 20px;\\r\\n    font-weight: 400;\\r\\n    color: #444;\\r\\n    line-height: 1.25;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n    display: block;\\r\\n    -webkit-margin-before: 1.33em;\\r\\n            margin-block-start: 1.33em;\\r\\n    -webkit-margin-after: 1.33em;\\r\\n            margin-block-end: 1.33em;\\r\\n    -webkit-margin-start: 0px;\\r\\n            margin-inline-start: 0px;\\r\\n    -webkit-margin-end: 0px;\\r\\n            margin-inline-end: 0px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.tax-featured .featured-text {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex: 1 0 auto;\\r\\n    justify-content: space-between;\\r\\n    padding: 10px;\\r\\n}\"","module.exports = \"<span class=\\\"header\\\">Groups</span>\\r\\n<br>\\r\\n<a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/group-create']\\\"routerLinkActive=\\\"mat-accent\\\">New Group</a>\\r\\n<br>\\r\\n<two-ways-bindings  [(counter)]=\\\"GroupsCount\\\" [groupsPerPage]=\\\"groupsPerPage\\\" [currentPage]=\\\"currentPage\\\" ></two-ways-bindings>\\r\\n<!-- <h2>count = {{GroupsCount}}</h2> -->\\r\\n<br>\\r\\n  <input matInput #filterValue  (keyup)=\\\"applyFilter($event.target.value)\\\"  placeholder=\\\"Filter by:\\\">\\r\\n  <br>\\r\\n  <input id=\\\"filterByTitle\\\" type=\\\"checkbox\\\" (change)=\\\"applyFilterType($event.target.checked, filterValue.value, 'filterByTitle')\\\" [checked]='filterByTitle' placeholder=\\\"By Title\\\" title=\\\"By Title\\\" value=\\\"By Title\\\"> \\r\\n  <label for=\\\"filterByTitle\\\">By Title</label>\\r\\n  <input id=\\\"filterByDesc\\\" type=\\\"checkbox\\\" (change)=\\\"applyFilterType($event.target.checked, filterValue.value, 'filterByDesc')\\\" [checked]='filterByDesc' placeholder=\\\"By Description\\\" title=\\\"By Description\\\" value=\\\"By Description\\\"> \\r\\n  <label for=\\\"filterByDesc\\\">By Description</label>\\r\\n  <input id=\\\"filterByImage\\\" type=\\\"checkbox\\\" (change)=\\\"applyFilterType($event.target.checked, filterValue.value, 'filterByImage')\\\" [checked]='filterByImage' placeholder=\\\"By Image\\\" title=\\\"By Image\\\" value=\\\"By Image\\\"> \\r\\n  <label for=\\\"filterByImage\\\">By Image</label>\\r\\n  <br>\\r\\n  <br>\\r\\n<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n\\r\\n<mat-grid-list cols=\\\"5\\\" rowHeight=\\\"1:1\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let group of groups\\\">   \\r\\n    <a [routerLink]=\\\"['/group-edit', group.id]\\\" >\\r\\n      <div >\\r\\n        <img class=\\\"featured-img\\\" [src]=\\\"group.imagePath\\\" [alt]=\\\"group.title\\\" >\\r\\n      </div>\\r\\n    </a>\\r\\n    <mat-grid-tile-footer>\\r\\n        <div class=\\\"featured-text\\\">\\r\\n          <h4 class=\\\"featured-title\\\" >          {{ group.title }}\\t\\t\\t\\t\\t</h4>\\r\\n        </div>\\r\\n      </mat-grid-tile-footer>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n<!--\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"groups.length > 0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let group of groups\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{ group.title }}\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"group-image\\\">\\r\\n      <img [src]=\\\"group.imagePath\\\" [alt]=\\\"group.title\\\">\\r\\n    </div>\\r\\n    <p>{{ group.description }}</p>\\r\\n    <mat-action-row>\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/group-edit', group.id]\\\">EDIT</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(group.id)\\\">DELETE</button>\\r\\n      <!- -\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/checklist-list', group.id]\\\">Check Lists</a>\\r\\n      - ->\\r\\n    </mat-action-row>\\r\\n    <!- -\\r\\n    <app-checklist-list [groupId]=\\\"group.id\\\" >\\r\\n\\r\\n    </app-checklist-list>\\r\\n  - ->\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n-->\\r\\n<mat-paginator [length]=\\\"totalGroups\\\" [pageSize]=\\\"groupsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\"\\r\\n  *ngIf=\\\"groups.length > 0\\\"></mat-paginator>\\r\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"groups.length <= 0 && !isLoading\\\">No group added yet!</p>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { PageEvent } from \"@angular/material\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { Group } from \"../../../Model/group.model\";\r\nimport { GroupsService } from \"../../../services/groups.service\";\r\nimport { stratify } from \"d3\";\r\nimport { stringify } from \"@angular/core/src/render3/util\";\r\n\r\n@Component({\r\n  selector: \"app-group-list\",\r\n  templateUrl: \"./group-list.component.html\",\r\n  styleUrls: [\"./group-list.component.css\"]\r\n})\r\nexport class GroupListComponent implements OnInit, OnDestroy {\r\n  GroupsCount : number=1;\r\n\r\n  groups: Group[] = [];\r\n  isLoading = false;\r\n  totalGroups = 0;\r\n  groupsPerPage = 10;\r\n  currentPage = 1;\r\n  pageSizeOptions = [10, 20, 50, 100];\r\n  private groupsSub: Subscription;\r\n\r\n  filterByTitle : boolean=true;\r\n  filterByDesc : boolean=true;\r\n  filterByImage : boolean=true;\r\n  filterValue: string;\r\n//  groupsAll: Group[] = [];\r\n \r\n  constructor(public groupsService: GroupsService) {\r\n    this.groups = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    //this.groupsService.getGroups(this.groupsPerPage, this.currentPage);\r\n//console.log(\"ngOnInit\");\r\n//console.log(\"totalGroups = \" + (this.totalGroups + \"\"));\r\n//console.log(\"  groupsPerPage = \" + (this.groupsPerPage + \"\"));\r\n//console.log(\"  currentPage = \" + (this.currentPage + \"\"));\r\n\r\n    this.groupsSub = this.groupsService\r\n      .getGroupUpdateListener()\r\n      .subscribe((groupData: {groups: Group[], groupCount: number}) => {\r\n        this.isLoading = false;\r\n        this.totalGroups = groupData.groupCount;\r\n        this.groups = groupData.groups;\r\n//        this.groupsAll = groupData.groups;\r\n        //console.log(\"subscribe\");\r\n\r\n      });\r\n\r\n      this.applyFilter(\"\");\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    //console.log(\"  onChangedPage\");\r\n\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.groupsPerPage = pageData.pageSize;\r\n    //this.groupsService.getGroups(this.groupsPerPage, this.currentPage);\r\n    this.applyFilter(this.filterValue);\r\n  }\r\n\r\n  onDelete(groupId: string) {\r\n    this.isLoading = true;\r\n    this.groupsService.deleteGroup(groupId).subscribe(() => {\r\n      this.groupsService.getGroups(this.groupsPerPage, this.currentPage);\r\n    });\r\n  }\r\n\r\n\r\n  applyFilter(filterValue) {\r\n  this.filterValue=filterValue;\r\n  var filterarr:string [] =[];\r\n  var filter : string;\r\n    if(filterValue!=\"\")\r\n    {\r\n      if ((this.filterByTitle==true) )\r\n      filterarr.push('{\"title\" : \"' + filterValue + '\"}');\r\n      if ((this.filterByDesc==true) )\r\n      filterarr.push('{\"description\" : \"' + filterValue + '\"}');\r\n      if ((this.filterByImage==true) )\r\n      filterarr.push('{\"imagePath\" : \"' + filterValue + '\"}');\r\n    } \r\n\r\n//-*/*/*/*/ \r\n//When calling to service, and applying filter - the service invoke the \r\n//getGroupUpdateListener \r\n//and update all local data memebers: \r\n//this.groups and this.groupsAll\r\n\r\n    if(filterarr.length>0)\r\n    {\r\n      filter = filterarr.join(\",\");\r\n      filter = '{\"$or\" : [' + filter + ']}';\r\n      this.groupsService.getGroups(this.groupsPerPage, this.currentPage,filter);\r\n    }\r\n    else\r\n      this.groupsService.getGroups(this.groupsPerPage, this.currentPage);\r\n\r\n \r\n\r\n    //if (this.dataSource.paginator) {\r\n    //  this.dataSource.paginator.firstPage();\r\n    //}\r\n  }\r\n\r\n  applyFilterType(checked:boolean, filterValue:string, type:string){\r\n\r\n    ////console.log(\"checked=\" + checked);\r\n    ////console.log(\"filterValue=\" + filterValue);\r\n    ////console.log(\"type=\" + type);\r\n\r\n    if(type==\"filterByTitle\")\r\n      this.filterByTitle=checked;\r\n      if(type==\"filterByDesc\")\r\n      this.filterByDesc=checked;\r\n      if(type==\"filterByImage\")\r\n      this.filterByImage=checked;\r\n\r\n      this.filterValue=filterValue;\r\n\r\n      this.applyFilter(this.filterValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.groupsSub.unsubscribe();\r\n    //console.log(\"ngOnDestroy\");\r\n  }\r\n}\r\n","module.exports = \"input {\\r\\n    width: 100%;\\r\\n    border-style: none;\\r\\n  }\\r\\n\"","module.exports = \"<p style=\\\"border-style: none; widows:100%\\\" >\\r\\n    <input type='text'  value=\\\"{{GroupsCount | HLLPipe }}\\\" />\\r\\n</p>\\r\\n\"","import { Component, OnInit, Output } from '@angular/core';\r\nimport { GroupsHLLService } from \"../../../services/groups-hll.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-groups-hll',\r\n  templateUrl: './groups-hll.component.html',\r\n  styleUrls: ['./groups-hll.component.css']\r\n})\r\nexport class GroupsHLLComponent implements OnInit {\r\n\r\n  constructor(    public groupsService: GroupsHLLService) { \r\n    this.groupsService.getGroupHLL().subscribe(groupData => {\r\n      //console.log(groupData);\r\n     });\r\n  }\r\n  @Output() GroupsCount : number=10;\r\n\r\n  ngOnInit() {\r\n    this.groupsService.getGroupHLL().subscribe(groupData => {\r\n     //console.log(JSON.stringify(groupData) );\r\n     this.GroupsCount =parseInt(JSON.stringify(groupData) );\r\n    });\r\n    \r\n    //validate hll algorithm by getting all groups broup-by title...\r\n     this.groupsService.getGroupChecklistsCountTop10().subscribe(groupData => {\r\n      //console.log(groupData);\r\n      //this.GroupsCount =parseInt(JSON.stringify(groupData) );\r\n     });\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"ul {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span>\\r\\n    <a routerLink=\\\"/\\\">Smart List</a>\\r\\n  </span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <ul>\\r\\n    <li>\\r\\n      <a mat-button routerLink=\\\"/group-list\\\" routerLinkActive=\\\"mat-accent\\\">Groups</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n    <!--  \\r\\n      <ul>\\r\\n      <li>\\r\\n        <a mat-button routerLink=\\\"/group-create\\\" routerLinkActive=\\\"mat-accent\\\">New Group</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <ul>\\r\\n      <li>\\r\\n        <a mat-button routerLink=\\\"/group-hll\\\" routerLinkActive=\\\"mat-accent\\\">Group Count</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    -->\\r\\n    <ul>\\r\\n      <li>\\r\\n        <a mat-button routerLink=\\\"/Statistics\\\" routerLinkActive=\\\"mat-accent\\\">Statistics</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n      <ul>\\r\\n     <li>\\r\\n        <a mat-button routerLink=\\\"/\\\" (submit)=\\\"onSubmit()\\\"  >\\r\\n          <button mat-icon-button (click)=\\\"logout()\\\">\\r\\n              Logout\\r\\n           </button>\\r\\n           </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n</mat-toolbar>\\r\\n\"","import { Component } from \"@angular/core\";\r\n//import \"rxjs/add/operator/filter\";\r\n//import \"rxjs/add/operator/first\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { Router, Route } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class HeaderComponent {\r\n\r\n  constructor(public auth: AuthService) {\r\n\r\n  }\r\n  \r\n  logout(){\r\n    this.auth.logout();\r\n  }\r\n\r\n}\r\n ","module.exports = \"#lock {\\r\\n    width:40%;\\r\\n    margin: 1.5em auto 4em auto;\\r\\n    display:block;\\r\\n}\\r\\n\\r\\n#fb {\\r\\n    background:#3B5998 url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 %3F%3E%3Csvg id%3D%22Layer_1%22 style%3D%22enable-background%3Anew 0 0 512 512%3B%22 version%3D%221.1%22 viewBox%3D%220 0 512 512%22 xml%3Aspace%3D%22preserve%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%3Cstyle type%3D%22text%2Fcss%22%3E%0D%09.st0%7Bfill%3A%23fff%3B%7D%0D%3C%2Fstyle%3E%3Cpath class%3D%22st0%22 d%3D%22M276.1%2C462V343.9h39.7l5.9-46h-45.6v-29.4c0-13.3%2C3.7-22.4%2C22.8-22.4l24.4%2C0v-41.2  c-4.2-0.6-18.7-1.8-35.5-1.8c-35.2%2C0-59.2%2C21.5-59.2%2C60.9v34h-39.8v46h39.8V462H276.1z%22 id%3D%22f%22%2F%3E%3C%2Fsvg%3E\\\") no-repeat 14px 6px;\\r\\n    background-size: 47px;\\r\\n    color:#fff;\\r\\n}\\r\\n\\r\\n#google {\\r\\n    border: 1px solid #95989A;\\r\\n    background: #fff  url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 %3F%3E%3C!DOCTYPE svg  PUBLIC '-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN'  'http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd'%3E%3Csvg enable-background%3D%22new 0 0 400 400%22 height%3D%22400px%22 id%3D%22Layer_1%22 version%3D%221.1%22 viewBox%3D%220 0 400 400%22 width%3D%22400px%22 xml%3Aspace%3D%22preserve%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%3Cg%3E%3Cpath d%3D%22M142.9%2C24.2C97.6%2C39.7%2C59%2C73.6%2C37.5%2C116.5c-7.5%2C14.8-12.9%2C30.5-16.2%2C46.8c-8.2%2C40.4-2.5%2C83.5%2C16.1%2C120.3   c12.1%2C24%2C29.5%2C45.4%2C50.5%2C62.1c19.9%2C15.8%2C43%2C27.6%2C67.6%2C34.1c31%2C8.3%2C64%2C8.1%2C95.2%2C1c28.2-6.5%2C54.9-20%2C76.2-39.6   c22.5-20.7%2C38.6-47.9%2C47.1-77.2c9.3-31.9%2C10.5-66%2C4.7-98.8c-58.3%2C0-116.7%2C0-175%2C0c0%2C24.2%2C0%2C48.4%2C0%2C72.6c33.8%2C0%2C67.6%2C0%2C101.4%2C0   c-3.9%2C23.2-17.7%2C44.4-37.2%2C57.5c-12.3%2C8.3-26.4%2C13.6-41%2C16.2c-14.6%2C2.5-29.8%2C2.8-44.4-0.1c-14.9-3-29-9.2-41.4-17.9   c-19.8-13.9-34.9-34.2-42.6-57.1c-7.9-23.3-8-49.2%2C0-72.4c5.6-16.4%2C14.8-31.5%2C27-43.9c15-15.4%2C34.5-26.4%2C55.6-30.9   c18-3.8%2C37-3.1%2C54.6%2C2.2c15%2C4.5%2C28.8%2C12.8%2C40.1%2C23.6c11.4-11.4%2C22.8-22.8%2C34.2-34.2c6-6.1%2C12.3-12%2C18.1-18.3   c-17.3-16-37.7-28.9-59.9-37.1C228.2%2C10.6%2C183.2%2C10.3%2C142.9%2C24.2z%22 fill%3D%22%23FFFFFF%22%2F%3E%3Cg%3E%3Cpath d%3D%22M142.9%2C24.2c40.2-13.9%2C85.3-13.6%2C125.3%2C1.1c22.2%2C8.2%2C42.5%2C21%2C59.9%2C37.1c-5.8%2C6.3-12.1%2C12.2-18.1%2C18.3    c-11.4%2C11.4-22.8%2C22.8-34.2%2C34.2c-11.3-10.8-25.1-19-40.1-23.6c-17.6-5.3-36.6-6.1-54.6-2.2c-21%2C4.5-40.5%2C15.5-55.6%2C30.9    c-12.2%2C12.3-21.4%2C27.5-27%2C43.9c-20.3-15.8-40.6-31.5-61-47.3C59%2C73.6%2C97.6%2C39.7%2C142.9%2C24.2z%22 fill%3D%22%23EA4335%22%2F%3E%3C%2Fg%3E%3Cg%3E%3Cpath d%3D%22M21.4%2C163.2c3.3-16.2%2C8.7-32%2C16.2-46.8c20.3%2C15.8%2C40.6%2C31.5%2C61%2C47.3c-8%2C23.3-8%2C49.2%2C0%2C72.4    c-20.3%2C15.8-40.6%2C31.6-60.9%2C47.3C18.9%2C246.7%2C13.2%2C203.6%2C21.4%2C163.2z%22 fill%3D%22%23FBBC05%22%2F%3E%3C%2Fg%3E%3Cg%3E%3Cpath d%3D%22M203.7%2C165.1c58.3%2C0%2C116.7%2C0%2C175%2C0c5.8%2C32.7%2C4.5%2C66.8-4.7%2C98.8c-8.5%2C29.3-24.6%2C56.5-47.1%2C77.2    c-19.7-15.3-39.4-30.6-59.1-45.9c19.5-13.1%2C33.3-34.3%2C37.2-57.5c-33.8%2C0-67.6%2C0-101.4%2C0C203.7%2C213.5%2C203.7%2C189.3%2C203.7%2C165.1z%22 fill%3D%22%234285F4%22%2F%3E%3C%2Fg%3E%3Cg%3E%3Cpath d%3D%22M37.5%2C283.5c20.3-15.7%2C40.6-31.5%2C60.9-47.3c7.8%2C22.9%2C22.8%2C43.2%2C42.6%2C57.1c12.4%2C8.7%2C26.6%2C14.9%2C41.4%2C17.9    c14.6%2C3%2C29.7%2C2.6%2C44.4%2C0.1c14.6-2.6%2C28.7-7.9%2C41-16.2c19.7%2C15.3%2C39.4%2C30.6%2C59.1%2C45.9c-21.3%2C19.7-48%2C33.1-76.2%2C39.6    c-31.2%2C7.1-64.2%2C7.3-95.2-1c-24.6-6.5-47.7-18.2-67.6-34.1C67%2C328.9%2C49.6%2C307.5%2C37.5%2C283.5z%22 fill%3D%22%2334A853%22%2F%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") no-repeat 25px;\\r\\n    background-size: 25px;\\r\\n}\\r\\n\\r\\n#email {\\r\\n    background: #ECECEC  url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 %3F%3E%3Csvg height%3D%22331.46899%22 id%3D%22svg2439%22 version%3D%221.0%22 width%3D%22439.371%22 xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Acc%3D%22http%3A%2F%2Fcreativecommons.org%2Fns%23%22 xmlns%3Adc%3D%22http%3A%2F%2Fpurl.org%2Fdc%2Felements%2F1.1%2F%22 xmlns%3Ainkscape%3D%22http%3A%2F%2Fwww.inkscape.org%2Fnamespaces%2Finkscape%22 xmlns%3Ardf%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%22 xmlns%3Asodipodi%3D%22http%3A%2F%2Fsodipodi.sourceforge.net%2FDTD%2Fsodipodi-0.dtd%22 xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cdefs id%3D%22defs2441%22%3E%3Cmarker id%3D%22ArrowEnd%22 markerHeight%3D%223%22 markerUnits%3D%22strokeWidth%22 markerWidth%3D%224%22 orient%3D%22auto%22 refX%3D%220%22 refY%3D%225%22 viewBox%3D%220 0 10 10%22%3E%3Cpath d%3D%22M 0%2C0 L 10%2C5 L 0%2C10 L 0%2C0 z%22 id%3D%22path2444%22%2F%3E%3C%2Fmarker%3E%3Cmarker id%3D%22ArrowStart%22 markerHeight%3D%223%22 markerUnits%3D%22strokeWidth%22 markerWidth%3D%224%22 orient%3D%22auto%22 refX%3D%2210%22 refY%3D%225%22 viewBox%3D%220 0 10 10%22%3E%3Cpath d%3D%22M 10%2C0 L 0%2C5 L 10%2C10 L 10%2C0 z%22 id%3D%22path2447%22%2F%3E%3C%2Fmarker%3E%3C%2Fdefs%3E%3Cg id%3D%22g2449%22 transform%3D%22translate(-145.3305%2C-145.3305)%22%3E%3Cpath d%3D%22M 569.374%2C461.472 L 569.374%2C160.658 L 160.658%2C160.658 L 160.658%2C461.472 L 569.374%2C461.472 z%22 id%3D%22path2451%22 style%3D%22fill%3Anone%3Bstroke%3A%23000000%3Bstroke-width%3A30.65500069%22%2F%3E%3Cpath id%3D%22path2453%22 style%3D%22fill%3Anone%3Bstroke%3A%23000000%3Bstroke-width%3A30.65500069%22%2F%3E%3Cpath d%3D%22M 164.46%2C164.49 L 340.78%2C343.158 C 353.849%2C356.328 377.63%2C356.172 390.423%2C343.278 L 566.622%2C165.928%22 id%3D%22path2455%22 style%3D%22fill%3Anone%3Bstroke%3A%23000000%3Bstroke-width%3A30.65500069%22%2F%3E%3Cpath d%3D%22M 170.515%2C451.566 L 305.61%2C313.46%22 id%3D%22path2457%22 style%3D%22fill%3Anone%3Bstroke%3A%23000000%3Bstroke-width%3A30.65500069%22%2F%3E%3Cpath d%3D%22M 557.968%2C449.974 L 426.515%2C315.375%22 id%3D%22path2459%22 style%3D%22fill%3Anone%3Bstroke%3A%23000000%3Bstroke-width%3A30.65500069%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\") no-repeat 25px;\\r\\n    background-size: 25px;\\r\\n}\\r\\n\\r\\n@media (max-width: 600px) {\\r\\n    #page {\\r\\n        padding:1em;\\r\\n    }\\r\\n    #toolbar {\\r\\n        width:90%;\\r\\n        margin-left: -45%;\\r\\n    }\\r\\n    #fb {\\r\\n        background:#3B5998;\\r\\n    }\\r\\n\\r\\n    #google {\\r\\n        background: #fff;\\r\\n    }\\r\\n\\r\\n    #email {\\r\\n        background: #ECECEC;\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"form-container\\\">\\r\\n  \\r\\n    <span class=\\\"error\\\" *ngIf=\\\"error\\\">{{ error }}</span>\\r\\n\\r\\n  <button (click)=\\\"loginFb()\\\" id=\\\"fb\\\">Login With Facebook</button><br>\\r\\n  <button (click)=\\\"loginGoogle()\\\" id=\\\"google\\\">Login With Google</button>\\r\\n  <button routerLink=\\\"/login-email\\\" id=\\\"email\\\">Email</button>\\r\\n\\r\\n  <!--<a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\" class=\\\"alc\\\">No account? <strong>Create one here</strong></a>-->\\r\\n</div>\"","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Router } from '@angular/router';\r\n//import { moveIn } from '../../router.animations';\r\n//import { AuthService } from '../../auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n  //,\r\n  //animations: [moveIn()],\r\n  //host: {'[@moveIn]': ''}\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  error: any;\r\n  user: Observable<firebase.User>;\r\n\r\n  constructor(public af: AngularFireAuth,private router: Router) {\r\n\r\n    af.authState.subscribe(auth => { \r\n      if(auth) {\r\n        this.router.navigateByUrl('/tasks');\r\n      }\r\n    });\r\n\r\n  }\r\n/*\r\n  loginFb() {\r\n    this.af.auth.login({\r\n      provider: AuthProviders.Facebook,\r\n      method: AuthMethods.Popup,\r\n    }).then(\r\n        (success) => {\r\n        this.router.navigate(['/tasks']);\r\n      }).catch(\r\n        (err) => {\r\n        this.error = err;\r\n      })\r\n  }\r\n\r\n  loginGoogle() {\r\n    this.af.auth.login({\r\n      provider: AuthProviders.Google,\r\n      method: AuthMethods.Popup,\r\n    }).then(\r\n        (success) => {\r\n        this.router.navigate(['/tasks']);\r\n      }).catch(\r\n        (err) => {\r\n        this.error = err;\r\n      })\r\n  }\r\n\r\n*/\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"d3-chart\\\" #chart></div>\"","import { Component, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport * as d3 from 'd3v4';\r\n//import * as D3 from '../../../../../node_modules/d3';\r\n//import { isBrowser } from 'angular2-universal'; // add this uptop\r\n  \r\n  @Component({\r\n    selector: 'app-barchart',\r\n    templateUrl: './barchart.component.html',\r\n    styleUrls: ['./barchart.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n  })\r\n  export class BarchartComponent implements OnInit, OnChanges {\r\n    @ViewChild('chart') private chartContainer: ElementRef;\r\n    @Input() private data: Array<any>;\r\n    private margin: any = { top: 20, bottom: 20, left: 20, right: 20};\r\n    private chart: any;\r\n    private width: number=700;\r\n    private height: number=400;\r\n    private xScale: any;\r\n    private yScale: any;\r\n    private colors: any;\r\n    private xAxis: any;\r\n    private yAxis: any;\r\n  \r\n    constructor() { }\r\n  \r\n    ngOnInit() {\r\n      this.createChart();\r\n      if (this.data) {\r\n        this.updateChart();\r\n      }\r\n    }\r\n  \r\n    ngOnChanges() {\r\n      if (this.chart) {\r\n        this.updateChart();\r\n      }\r\n    }\r\n  \r\n    createChart() {\r\n      let element = this.chartContainer.nativeElement;\r\n      //this.width = 700;//element.offsetWidth - this.margin.left - this.margin.right;\r\n      //this.height = 400;// element.offsetHeight - this.margin.top - this.margin.bottom;\r\n      let svg = d3.select(element).append('svg')\r\n        .attr('width', element.offsetWidth)\r\n        .attr('height', this.height+50);\r\n  \r\n      // chart plot area\r\n      this.chart = svg.append('g')\r\n        .attr('class', 'bars')\r\n        .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n  \r\n      // define X & Y domains\r\n      let xDomain = this.data.map(d => d[0]);\r\n      let yDomain = [0, d3.max(this.data, d => d[1])];\r\n  \r\n      // create scales\r\n      this.xScale = d3.scaleBand().padding(0.1).domain(xDomain).rangeRound([0, this.width]);\r\n      this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n  \r\n      // bar colors\r\n      this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n  \r\n      // x & y axis\r\n      this.xAxis = svg.append('g')\r\n        .attr('class', 'axis axis-x')\r\n        .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n        .call(d3.axisBottom(this.xScale));\r\n      this.yAxis = svg.append('g')\r\n        .attr('class', 'axis axis-y')\r\n        .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n        .call(d3.axisLeft(this.yScale));\r\n    }\r\n  \r\n    updateChart() {\r\n      // update scales & axis\r\n      this.xScale.domain(this.data.map(d => d[0]));\r\n      this.yScale.domain([0, d3.max(this.data, d => d[1])]);\r\n      this.colors.domain([0, this.data.length]);\r\n      this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n      this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n  \r\n      let update = this.chart.selectAll('.bar')\r\n        .data(this.data);\r\n  \r\n      // remove exiting bars\r\n      update.exit().remove();\r\n  \r\n      // update existing bars\r\n      this.chart.selectAll('.bar').transition()\r\n        .attr('x', d => this.xScale(d[0]))\r\n        .attr('y', d => this.yScale(d[1]))\r\n        .attr('width', d => this.xScale.bandwidth())\r\n        .attr('height', d => (this.height - this.yScale(d[1])))\r\n        .style('fill', (d, i) => this.colors(i));\r\n  \r\n      // add new bars\r\n      update\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', 'bar')\r\n        .attr('x', d => this.xScale(d[0]))\r\n        .attr('y', d => this.yScale(0))\r\n        .attr('width', this.xScale.bandwidth())\r\n        .attr('height', 0)\r\n        .style('fill', (d, i) => this.colors(i))\r\n        .transition()\r\n        .delay((d, i) => i * 10)\r\n        .attr('y', d => this.yScale(d[1]))\r\n        .attr('height', d => ( this.height - this.yScale(d[1])));\r\n    }\r\n  }","module.exports = \"\\r\\n.google-place-input {\\r\\n    width: 50%;\\r\\n    min-width: 280px;\\r\\n    height: 2rem; \\r\\n    font-size: 1.5rem; \\r\\n    padding: 0.5rem;\\r\\n}\\r\\n\\r\\nagm-map {\\r\\n    height: 300px;\\r\\n  }\\r\\n\\r\\n* {\\r\\n    font-family: Lato;\\r\\n  }\\r\\n\\r\\na {\\r\\n    color: darkblue;\\r\\n  }\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n\\r\\n<div class=\\\"form-container\\\">\\r\\n<!--  <a routerLink=\\\"/login\\\" id=\\\"goback\\\">Go back</a> -->\\r\\n\\r\\n<h2>Join now</h2>\\r\\n<span class=\\\"error\\\" *ngIf=\\\"error\\\" >{{ error }}</span>\\r\\n<form   [formGroup]=\\\"form\\\" (submit)=\\\"onSubmit()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"email\\\" placeholder=\\\"Email address..\\\">\\r\\n        <mat-error *ngIf=\\\"form.get('email').invalid\\\">Please enter an Email address.</mat-error>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n          <mat-error *ngIf=\\\"form.get('password').invalid\\\">Please enter a valid password.</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <br>\\r\\n      <mat-form-field>\\r\\n          <input google-place  (onSelect)=\\\"setAddress($event)\\\" matInput type=\\\"text\\\" formControlName=\\\"address\\\" placeholder=\\\"Type to search Address...\\\"     class=\\\"google-place-input\\\" >\\r\\n          <mat-error *ngIf=\\\"form.get('address').invalid\\\">Please enter a valid Addreess.</mat-error>\\r\\n          <!-- Displaying the contents of the address object received from our event emitter -->\\r\\n            <ul style=\\\"list-style-type: none;\\\">\\r\\n                <li *ngFor=\\\"let key of addrKeys\\\">\\r\\n                <span style=\\\"font-weight: bold\\\">{{key}}</span>: <span>{{addr[key]}}</span>\\r\\n                </li>\\r\\n            </ul>\\r\\n\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" [value]=\\\"latitude\\\" formControlName=\\\"latitude\\\" placeholder=\\\"Latitude\\\">\\r\\n          <mat-error *ngIf=\\\"form.get('latitude').invalid\\\">Please enter a valid latitude.</mat-error>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" [value]=\\\"longitude\\\"  formControlName=\\\"longitude\\\" placeholder=\\\"Longitude\\\">\\r\\n          <mat-error *ngIf=\\\"form.get('longitude').invalid\\\">Please enter a valid longitude.</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"form.get('password').invalid\\\" >Create my account</button> \\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n          &nbsp;\\r\\n      </div>\\r\\n      <!--\\r\\n      <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n            <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\"></agm-marker>\\r\\n      </agm-map>\\r\\n        -->\\r\\n\\r\\n      <agm-map \\r\\n      [latitude]=\\\"latitude\\\"\\r\\n      [longitude]=\\\"longitude\\\"\\r\\n      [zoom]=\\\"zoom\\\"\\r\\n      [disableDefaultUI]=\\\"false\\\"\\r\\n      [zoomControl]=\\\"false\\\"\\r\\n      (mapClick)=\\\"mapClicked($event)\\\">\\r\\n    \\r\\n      <agm-marker \\r\\n          *ngFor=\\\"let m of markers; let i = index\\\"\\r\\n          (markerClick)=\\\"clickedMarker(m.label, i)\\\"\\r\\n          [latitude]=\\\"m.lat\\\"\\r\\n          [longitude]=\\\"m.lng\\\"\\r\\n          [label]=\\\"m.label\\\"\\r\\n          [markerDraggable]=\\\"m.draggable\\\"\\r\\n          (dragEnd)=\\\"markerDragEnd(m, $event)\\\">\\r\\n          \\r\\n        <agm-info-window>\\r\\n          <strong>InfoWindow content</strong>\\r\\n        </agm-info-window>\\r\\n        \\r\\n      </agm-marker>\\r\\n      \\r\\n      <!--\\r\\n      <agm-circle [latitude]=\\\"latitude + 0.3\\\" [longitude]=\\\"longitude\\\" \\r\\n          [radius]=\\\"5000\\\"\\r\\n          [fillColor]=\\\"'red'\\\"\\r\\n          [circleDraggable]=\\\"true\\\"\\r\\n          [editable]=\\\"true\\\">\\r\\n      </agm-circle>\\r\\n    -->\\r\\n    </agm-map>\\r\\n\\r\\n    </form>\\r\\n</div>\\r\\n</mat-card>\\r\\n\"","import { Component, Injectable, OnInit ,NgZone } from '@angular/core';\r\n//import { AngularFire, AuthProviders, AuthMethods } from 'angularfire2';\r\nimport { Router } from '@angular/router';\r\n//import { moveIn, fallIn } from '../router.animations';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n//import { AuthGuard } from '../../auth.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n//import { GoogleMapsAPIWrapper } from 'angular2-google-maps/core';\r\n//import { MapsAPILoader } from 'angular2-google-maps/core';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { MapsAPILoader } from '@agm/core';\r\ndeclare var google:any;\r\n\r\n\r\nimport { MouseEvent } from '@agm/core';\r\nimport { User } from \"../../Model/user\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']//,\r\n//  animations: [moveIn(), fallIn()],\r\n//  host: {'[@moveIn]': ''}\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  email:String;\r\n  password: String;\r\n  address: String;\r\n  latitude: number = 31.776615;\r\n  longitude: number = 35.234479;\r\n\r\n  zoom:number = 8;\r\n\r\n  coords = {};\r\n  lat:number = 0;\r\n  long:number = 0;\r\n\r\n  state: string = '';\r\n  error: any;\r\n  public addrKeys: string[];\r\n  public addr: object;\r\n  \r\n  UsersCount : number=1;\r\n\r\n  users: User[] = [];\r\n  totalUsers = 0;\r\n  usersPerPage = 10;\r\n  currentPage = 1;\r\n  pageSizeOptions = [10, 20, 50, 100];\r\n  private usersSub: Subscription;\r\n  usersAll: User[] = [];\r\n\r\n  constructor(public af: AngularFireAuth,private router: Router, public usersService:UsersService, private zone: NgZone, private __loader: MapsAPILoader) {\r\n      \r\n    this.af.authState.subscribe(auth => { \r\n      if(auth) {\r\n        //this.router.navigateByUrl('/groups-list');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  markers: marker[] =[];/* = [\r\n    {\r\n      lat: 51.673858,\r\n      lng: 7.815982,\r\n      label: 'A',\r\n      draggable: true\r\n    },\r\n    {\r\n      lat: 51.373858,\r\n      lng: 7.215982,\r\n      label: 'B',\r\n      draggable: false\r\n    },\r\n    {\r\n      lat: 51.723858,\r\n      lng: 7.895982,\r\n      label: 'C',\r\n      draggable: true\r\n    }\r\n  ]*/\r\n\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    \r\n    //console.log(formData.value);\r\n    return new Promise<any>((resolve, reject) => {\r\n        this.af.auth.createUserWithEmailAndPassword(this.form.value.email, this.form.value.password)\r\n        .then(\r\n        (success) => {\r\n        console.log(success);\r\n\r\n        if (this.form.invalid) {\r\n          return;\r\n        }\r\n        this.isLoading = true;\r\n        //if (this.mode === \"create\") \r\n        {\r\n          this.usersService.addUser(\r\n            this.form.value.email,\r\n            this.form.value.password,\r\n            this.form.value.address,\r\n            this.form.value.longitude,\r\n            this.form.value.latitude\r\n            );\r\n            \r\n          }\r\n        this.router.navigate(['/group-list']);\r\n        \r\n      }).catch(\r\n        (err) => {\r\n        console.log(err);\r\n        this.error = err;\r\n      });\r\n      \r\n    });\r\n    \r\n}\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, {validators: [Validators.required, Validators.minLength(5)]      }),\r\n      password: new FormControl(null, { validators: [Validators.required, Validators.minLength(6)] }),\r\n      address: new FormControl(null, { validators: [Validators.required] }),\r\n      latitude: new FormControl(null, { validators: [Validators.required] }),\r\n      longitude: new FormControl(null, { validators: [Validators.required] }),\r\n    });\r\n\r\n\r\n    //Load all users on GoogleMap\r\n    this.usersService.getUsers(this.usersPerPage, this.currentPage);\r\n    this.usersSub = this.usersService\r\n      .getUserUpdateListener()\r\n      .subscribe((userData: {users: User[], userCount: number}) => {\r\n        this.isLoading = false;\r\n        this.totalUsers = userData.userCount;\r\n        this.users = userData.users;\r\n        this.usersAll = userData.users;\r\n\r\n\r\n        for( var i = 0; i < this.usersAll.length; i++ ) {\r\n          console.log(this.usersAll[i].email);\r\n          this.markers.push({\r\n            lat: this.usersAll[i].latitude,\r\n            lng: this.usersAll[i].longitude,\r\n            label: this.usersAll[i].email,\r\n            draggable: true\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  //Method to be invoked everytime we receive a new instance \r\n  //of the address object from the onSelect event emitter.\r\n  setAddress(addrObj) {\r\n    console.log(addrObj);\r\n    //We are wrapping this in a NgZone to reflect the changes\r\n    //to the object in the DOM.\r\n    this.zone.run(() => {\r\n      this.addr = addrObj;\r\n      this.addrKeys = Object.keys(addrObj);\r\n      console.log(Object.keys(addrObj));\r\n\r\n      var strAddress:string;\r\n//      strAddress = this.addr[this.addrKeys[0]];\r\n      strAddress = addrObj;\r\n      \r\n\r\n      \r\n\r\n      this.getGeocoding(strAddress).subscribe(function (x) {\r\n        console.log(x.toString());\r\n        var latitude = x.lat();\r\n        var longitude = x.lng();\r\n        console.log(\"lat: \" + latitude + \", long: \" + longitude);\r\n\r\n        this.latitude = latitude;\r\n        this.longitude=longitude;\r\n      \r\n\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n\r\n  getGeocoding(address: string) {\r\n    return Observable.create(observer => {\r\n        try {\r\n            //at this point the variable google may be still undefined (google maps scripts still loading)\r\n            //so load all the scripts, then...\r\n            this.__loader.load().then(() => {\r\n                let geocoder = new google.maps.Geocoder();\r\n                geocoder.geocode({ address }, (results, status) => {\r\n\r\n                    if (status === google.maps.GeocoderStatus.OK) {\r\n                        const place = results[0].geometry.location;\r\n                        observer.next(place);\r\n                        observer.complete();\r\n                    } else {\r\n                        console.error('Error - ', results, ' & Status - ', status);\r\n                        if (status === google.maps.GeocoderStatus.ZERO_RESULTS) {\r\n                            observer.error('Address not found!');\r\n                        }else {\r\n                            observer.error(status);\r\n                        }\r\n                        \r\n                        observer.complete();\r\n                    }\r\n                });\r\n            });\r\n        } catch (error) {\r\n            observer.error('error getGeocoding' + error);\r\n            observer.complete();\r\n        }\r\n\r\n    });\r\n}\r\n\r\nclickedMarker(label: string, index: number) {\r\n  console.log(`clicked the marker: ${label || index}`)\r\n}\r\n\r\nmapClicked($event: MouseEvent) {\r\n  this.markers.push({\r\n    lat: $event.coords.lat,\r\n    lng: $event.coords.lng,\r\n    draggable: true\r\n  });\r\n}\r\n\r\nmarkerDragEnd(m: marker, $event: MouseEvent) {\r\n  console.log('dragEnd', m, $event);\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n// just an interface for type safety.\r\ninterface marker {\r\nlat: number;\r\nlng: number;\r\nlabel?: string;\r\ndraggable: boolean;\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n  <span>Currently count of Groups:</span>  <input (onchange)=\\\"changed()\\\" formControlName=\\\"gCount\\\" type='text'  id=\\\"gCount\\\" [value]=\\\"GroupsCount\\\" #gCount style=\\\"border-style: none\\\" />\\r\\n  <!-- {{GroupsCount}} \\r\\n  <input [(ngModel)]=\\\"GroupsCount\\\" />\\r\\n  -->\\r\\n  </form>\"","import { Component,OnInit,Input,Output ,ElementRef,EventEmitter} from '@angular/core';\r\nimport * as express from \"express\";\r\nimport * as socketIo from 'socket.io-client';\r\n//import * as path from \"path\"\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { group } from '@angular/animations';\r\nimport { GroupsService } from \"../../../app/services/groups.service\";\r\nimport { Group } from \"../../../../src/app/Model/group.model\";\r\nimport { Subscription } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { SocketService } from \"../../../app/services/socket.service\";\r\n\r\nconst SERVER_URL = 'http://localhost:3000';\r\n\r\n@Component({\r\n  selector: 'two-ways-bindings',\r\n  templateUrl: './two-ways-bindings.component.html',\r\n  styleUrls: ['./two-ways-bindings.component.css']\r\n})\r\nexport class TwoWaysBindingsComponent implements OnInit {\r\n  @Output() socket;\r\n  GroupsCount : number=0;\r\n  form: FormGroup;\r\n  private groupsSub: Subscription;\r\n\r\n  @Output() counterChange :  EventEmitter<number>;\r\n\r\n@Input() public groupsPerPage = 10;\r\n@Input() public currentPage = 1;\r\n\r\n\r\n  constructor(public groupsService:GroupsService, public socketService:SocketService ) { \r\n    this.counterChange = new EventEmitter();\r\n    \r\n    /* this.socketService.getMessages()\r\n   .subscribe((message: string) => {\r\n     //console.log(\"subscribe\");\r\n     this.GroupsCount = parseInt(message);\r\n   });    */\r\n  }\r\n\r\n  @Input() \r\n  get counter(){\r\n      return this.GroupsCount; \r\n  }\r\n  set counter(val:number){\r\n    this.GroupsCount=val;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.form = new FormGroup({\r\n      gCount: new FormControl()\r\n   });\r\n\r\n   //Load default value - current actual count value\r\n   this.groupsService.getGroups(this.groupsPerPage, this.currentPage);\r\n   this.groupsSub = this.groupsService\r\n     .getGroupUpdateListener()\r\n     .subscribe((groupData: {groups: Group[], groupCount: number}) => {\r\n       this.GroupsCount = groupData.groupCount;\r\n     });   \r\n\r\n    //register  getMessages events of socket\r\n   this.socketService.getMessages()\r\n   .subscribe((message: string) => {\r\n     //console.log(\"subscribe\");\r\n     this.GroupsCount = parseInt(message);\r\n   });    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //console.log(\"appComponent ngOnDestroy\");\r\n    //this.socketService.getMessages().unsubscribe();\r\n    //this.socketService.closeUserSocket();\r\n  }  \r\n}\r\n\r\n/*import { Component,OnInit,Input,Output ,ElementRef,EventEmitter} from '@angular/core';\r\nimport * as express from \"express\";\r\nimport * as socketIo from 'socket.io-client';\r\n//import * as path from \"path\"\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { group } from '@angular/animations';\r\nimport { GroupsService } from \"../../../app/services/groups.service\";\r\nimport { Group } from \"../../../../src/app/Model/group.model\";\r\nimport { Subscription } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst SERVER_URL = 'http://localhost:3000';\r\n\r\n@Component({\r\n  selector: 'two-ways-bindings',\r\n  templateUrl: './two-ways-bindings.component.html',\r\n  styleUrls: ['./two-ways-bindings.component.css']\r\n})\r\nexport class TwoWaysBindingsComponent implements OnInit {\r\n  @Output() socket;\r\n  GroupsCount : number=0;\r\n  form: FormGroup;\r\n  private groupsSub: Subscription;\r\n\r\n  @Output() counterChange :  EventEmitter<number>;\r\n\r\n  constructor(public groupsService:GroupsService) { \r\n    this.counterChange = new EventEmitter();\r\n  }\r\n\r\n  @Input() \r\n  get counter(){\r\n      return this.GroupsCount; \r\n  }\r\n  set counter(val:number){\r\n    this.GroupsCount=val;\r\n  }\r\n\r\n  public getMessages = () => {\r\n    return Observable.create((observer) => {\r\n        this.socket.on('GroupAdded', (message) => {\r\n            observer.next(message);\r\n        });\r\n    });\r\n}\r\n\r\n  sendMsg() {\r\n    //console.log(\"sending message to server\");\r\n    this.socket.emit(\"message\", \"HELLO WORLD\");\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.form = new FormGroup({\r\n      gCount: new FormControl()\r\n   });\r\n\r\n   this.groupsService.getGroups(1, 1);\r\n   this.groupsSub = this.groupsService\r\n     .getGroupUpdateListener()\r\n     .subscribe((groupData: {groups: Group[], groupCount: number}) => {\r\n       this.GroupsCount = groupData.groupCount;\r\n     });   \r\n\r\n\r\n      this.socket = socketIo(SERVER_URL);\r\n      this.socket.on('message', function(message: any){\r\n        //console.log(\"getting message from server: \" + message);\r\n      });\r\n\r\n    //   \r\n    //   this.socket.on('GroupAdded', function(groupsCount: any){\r\n    //     //console.log(\"Group count: \" + groupsCount);\r\n    //     this.GroupsCount = groupsCount+1;\r\n\r\n    //     //this.counterChange.emit(this.GroupsCount);\r\n\r\n    //     //this.from.(\"gCount\").setValue(groupsCount);\r\n    //     //this.form.value.gCount=groupsCount;\r\n    //     //this.gCount.value=groupsCount;\r\n    //     //this.form = new FormGroup({\r\n    //      // gCount: new FormControl(null, null)\r\n    //      // });\r\n    \r\n    //     //this.form.setValue({\r\n    //     //  gCount: groupsCount\r\n    //     //});\r\n    //   });   \r\n    // \r\n\r\n   this.getMessages()\r\n   .subscribe((message: string) => {\r\n     this.GroupsCount = parseInt(message);\r\n   });    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //console.log(\"appComponent ngOnDestroy\");\r\n  }  \r\n}\r\n*/","import { Directive, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation , Output, EventEmitter  } from '@angular/core';\r\nimport * as d3 from 'd3v4';\r\n//import * as D3 from '../../../../../node_modules/d3';\r\n//import { isBrowser } from 'angular2-universal'; // add this uptop\r\n\r\n@Directive({\r\n  selector: '[D3Chart]'\r\n})\r\nexport class D3ChartDirective  implements OnInit, OnChanges {\r\n  private chartContainer: HTMLInputElement;\r\n\r\n  //@ViewChild('chart') private chartContainer: ElementRef;\r\n  @Input() private data: Array<any>;\r\n  private margin: any = { top: 20, bottom: 20, left: 20, right: 20};\r\n  private chart: any;\r\n  private width: number=700;\r\n  private height: number=400;\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private colors: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n\r\n  constructor(elRef: ElementRef) {\r\n    //elRef will get a reference to the element where\r\n    //the directive is placed\r\n    this.chartContainer = elRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createChart();\r\n    if (this.data) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.chart) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  createChart() {\r\n    let element = this.chartContainer;//.nativeElement;\r\n    //this.width = 700;//element.offsetWidth - this.margin.left - this.margin.right;\r\n    //this.height = 400;// element.offsetHeight - this.margin.top - this.margin.bottom;\r\n    let svg = d3.select(element).append('svg')\r\n      .attr('width', element.offsetWidth)\r\n      .attr('height', this.height+50);\r\n\r\n    // chart plot area\r\n    this.chart = svg.append('g')\r\n      .attr('class', 'bars')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n\r\n    // define X & Y domains\r\n    let xDomain = this.data.map(d => d[0]);\r\n    let yDomain = [0, d3.max(this.data, d => d[1])];\r\n\r\n    // create scales\r\n    this.xScale = d3.scaleBand().padding(0.1).domain(xDomain).rangeRound([0, this.width]);\r\n    this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n\r\n    // bar colors\r\n    this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n\r\n    // x & y axis\r\n    this.xAxis = svg.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n      .call(d3.axisBottom(this.xScale));\r\n    this.yAxis = svg.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n      .call(d3.axisLeft(this.yScale));\r\n  }\r\n\r\n  updateChart() {\r\n    // update scales & axis\r\n    this.xScale.domain(this.data.map(d => d[0]));\r\n    this.yScale.domain([0, d3.max(this.data, d => d[1])]);\r\n    this.colors.domain([0, this.data.length]);\r\n    this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n    this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n\r\n    let update = this.chart.selectAll('.bar')\r\n      .data(this.data);\r\n\r\n    // remove exiting bars\r\n    update.exit().remove();\r\n\r\n    // update existing bars\r\n    this.chart.selectAll('.bar').transition()\r\n      .attr('x', d => this.xScale(d[0]))\r\n      .attr('y', d => this.yScale(d[1]))\r\n      .attr('width', d => this.xScale.bandwidth())\r\n      .attr('height', d => (this.height - this.yScale(d[1])))\r\n      .style('fill', (d, i) => this.colors(i));\r\n\r\n    // add new bars\r\n    update\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => this.xScale(d[0]))\r\n      .attr('y', d => this.yScale(0))\r\n      .attr('width', this.xScale.bandwidth())\r\n      .attr('height', 0)\r\n      .style('fill', (d, i) => this.colors(i))\r\n      .transition()\r\n      .delay((d, i) => i * 10)\r\n      .attr('y', d => this.yScale(d[1]))\r\n      .attr('height', d => ( this.height - this.yScale(d[1])));\r\n  }\r\n}\r\n ","/*\r\nimport { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { } from 'googlemaps';\r\nimport { MapsAPILoader } from '@agm/core';\r\n\r\nimport * as googleMaps from '@google/maps';\r\nimport { } from '@types/googlemaps';\r\n\r\n@Directive({\r\n  selector: '[google-place]'\r\n})\r\nexport class GooglePlacesDirective implements OnInit {\r\n  private element: HTMLInputElement;\r\n\r\n  constructor(private elRef: ElementRef) {\r\n    //elRef will get a reference to the element where\r\n    //the directive is placed\r\n    this.element = elRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const autocomplete = new google.maps.places.Autocomplete(this.element);\r\n  }\r\n\r\n}\r\n*/\r\n\r\nimport { Directive, ElementRef, OnInit, Output, EventEmitter } from '@angular/core';\r\n \r\ndeclare var google:any;\r\n\r\n@Directive({\r\n  selector: '[google-place]'\r\n})\r\nexport class GooglePlacesDirective implements OnInit {\r\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n  private element: HTMLInputElement;\r\n\r\n  constructor(elRef: ElementRef) {\r\n    //elRef will get a reference to the element where\r\n    //the directive is placed\r\n    this.element = elRef.nativeElement;\r\n  }\r\n\r\n  getFormattedAddress(place) {\r\n    //@params: place - Google Autocomplete place object\r\n    //@returns: location_obj - An address object in human readable format\r\n\r\n    //console.log(\"getFormattedAddress\");\r\n    let location_obj = {};\r\n    for (let i in place.address_components) {\r\n      let item = place.address_components[i];\r\n      \r\n//console.log(place.formatted_address);\r\n\r\n      location_obj['formatted_address'] = place.formatted_address;\r\n      if(item['types'].indexOf(\"locality\") > -1) {\r\n        location_obj['locality'] = item['long_name']\r\n      } else if (item['types'].indexOf(\"administrative_area_level_1\") > -1) {\r\n        location_obj['admin_area_l1'] = item['short_name']\r\n      } else if (item['types'].indexOf(\"street_number\") > -1) {\r\n        location_obj['street_number'] = item['short_name']\r\n      } else if (item['types'].indexOf(\"route\") > -1) {\r\n        location_obj['route'] = item['long_name']\r\n      } else if (item['types'].indexOf(\"country\") > -1) {\r\n        location_obj['country'] = item['long_name']\r\n      } else if (item['types'].indexOf(\"postal_code\") > -1) {\r\n        location_obj['postal_code'] = item['short_name']\r\n      }\r\n     \r\n    }\r\n    return location_obj;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const autocomplete = new google.maps.places.Autocomplete(this.element);\r\n    //Event listener to monitor place changes in the input\r\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\r\n\r\n      //console.log( autocomplete.getPlace());\r\n      //Emit the new address object for the updated place\r\n//      this.onSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\r\n//      this.onSelect.emit(autocomplete.getPlace());\r\n      this.onSelect.emit(this.element.value);\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","// services/auth-guard.service.ts\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router, private authService: AuthService) { }\r\n    canActivate() {\r\n        if ( this.authService.isLoggedIn() ) {\r\n            return true;\r\n        }\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n}","/*\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport { Observable } from 'rxjs';\r\n@Injectable()\r\nexport class AuthService {\r\n  private user: Observable<firebase.User>;\r\nconstructor(private _firebaseAuth: AngularFireAuth, private router: Router) { \r\n      this.user = _firebaseAuth.authState;\r\n  }\r\n}\r\n*/\r\n\r\n/*\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AngularFireAuth } from \"angularfire2/auth\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, observable } from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  private user: Observable<firebase.User>;\r\n\r\n    constructor(private auth: AngularFireAuth, private router: Router) {\r\n      this.user = auth.authState;\r\n    }\r\n\r\n    canActivate(): Observable<boolean> {\r\n      this.user.pipe(\r\n        map(auth =>{\r\n          if (auth) \r\n            return true ;\r\n          else { \r\n            this.router.navigate(['access-denied'])\r\n          }\r\n        })); \r\n        return ;\r\n      };\r\n  \r\n    }\r\n  \r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport { Observable } from 'rxjs';\r\n\r\n//@Injectable()\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n  private user: Observable<firebase.User>;\r\n  private userDetails: firebase.User = null;\r\nconstructor(private _firebaseAuth: AngularFireAuth, private router: Router) { \r\n      this.user = _firebaseAuth.authState;\r\nthis.user.subscribe(\r\n        (user) => {\r\n          if (user) {\r\n            this.userDetails = user;\r\n            //console.log(this.userDetails);\r\n          }\r\n          else {\r\n            this.userDetails = null;\r\n            //console.log('Not Signin');\r\n          }\r\n        }\r\n      );\r\n  }\r\n/* signInWithTwitter() {\r\n    return this._firebaseAuth.auth.signInWithPopup(\r\n      new firebase.auth.TwitterAuthProvider()\r\n    )\r\n  }\r\nsignInWithFacebook() {\r\n    return this._firebaseAuth.auth.signInWithPopup(\r\n      new firebase.auth.FacebookAuthProvider()\r\n    )\r\n  }\r\nsignInWithGoogle() {\r\n    return this._firebaseAuth.auth.signInWithPopup(\r\n      new firebase.auth.GoogleAuthProvider()\r\n    )\r\n  } */\r\nisLoggedIn() {\r\n  if (this.userDetails == null ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\nlogout() {\r\n    this._firebaseAuth.auth.signOut()\r\n    .then((res) => \r\n    {\r\n      this.userDetails = null;\r\n      this.router.navigate(['/login-email']);\r\n      \r\n    }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { ChecklistItem } from \"../Model/checklistItem.model\";\r\nimport { group } from \"@angular/animations\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ChecklistItemsService {\r\n  private checklistItems: ChecklistItem[] = [];\r\n  private checklistItemsUpdated = new Subject<{ checklistItems: ChecklistItem[]; checklistItemsCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getChecklistItems(checklistItemsPerPage: number, currentPage: number, checklistId: string) {\r\n    const queryParams = `?pagesize=${checklistItemsPerPage}&page=${currentPage}&checklistId=${checklistId}`;\r\n    //console.log(checklistId);\r\n    this.http\r\n      .get<{ message: string; checklistItems: any; maxChecklistItems: number }>(\r\n        \"http://localhost:3000/api/checklistItems\" + queryParams\r\n      )\r\n      .pipe(\r\n        map(checklistItemsData => {\r\n          return {\r\n            checklistItems: checklistItemsData.checklistItems.map(checklistItems => {\r\n              //console.log(\"checklistItems.isDone\" + checklistItems.isDone);\r\n\r\n              return {\r\n                id: checklistItems._id,\r\n                title: checklistItems.title,\r\n                description: checklistItems.description,\r\n                imagePath: checklistItems.imagePath,\r\n                checklistId: checklistItems.checklistId,\r\n                isDone: checklistItems.isDone\r\n              };\r\n            }),\r\n            maxChecklistItems: checklistItemsData.maxChecklistItems\r\n          };\r\n        })\r\n      )\r\n      .subscribe(transformedChecklistItemsData => {\r\n        this.checklistItems = transformedChecklistItemsData.checklistItems;\r\n        this.checklistItemsUpdated.next({\r\n          checklistItems: [...this.checklistItems],\r\n          checklistItemsCount: transformedChecklistItemsData.maxChecklistItems\r\n        });\r\n      });\r\n  }\r\n\r\n  getChecklistItemsUpdateListener() {\r\n    return this.checklistItemsUpdated.asObservable();\r\n  }\r\n\r\n  getChecklistItem(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      description: string;\r\n      imagePath: string;\r\n      checklistId : string;\r\n      isDone: boolean;\r\n    }>(\"http://localhost:3000/api/checklistItems/\" + id);\r\n  }\r\n\r\n  addChecklistItems(title: string, description: string, image: File , checklistId: string, isDone: boolean) {\r\n    const checklistItemsData = new FormData();\r\n    checklistItemsData.append(\"title\", title);\r\n    checklistItemsData.append(\"description\", description);\r\n    checklistItemsData.append(\"image\", image, title);\r\n    checklistItemsData.append(\"checklistId\", checklistId);\r\n    checklistItemsData.append(\"isDone\", (isDone==true?'true':'false'));\r\n    //console.log(checklistId);\r\n    //checklistItemsData.append(\"checklistItemsItems\",checklistItemsItems);\r\n    this.http\r\n      .post<{ message: string; checklistItems: ChecklistItem }>(\r\n        \"http://localhost:3000/api/checklistItems\",\r\n        checklistItemsData\r\n      )\r\n      .subscribe(responseData => {\r\n        this.router.navigate([\"/checklist-edit/\" + checklistId]);\r\n        //this.router.navigate([\"/checklistItem-list/\" + checklistId]);\r\n      });\r\n  }\r\n\r\n  updateChecklistItems(id: string, title: string, description: string, image: File | string, checklistId: string, isDone: boolean, redirectToList: boolean = true) {\r\n    let checklistItemsData: ChecklistItem | FormData;\r\n    if (typeof image === \"object\") {\r\n      checklistItemsData = new FormData();\r\n      checklistItemsData.append(\"id\", id);\r\n      checklistItemsData.append(\"title\", title);\r\n      checklistItemsData.append(\"description\", description);\r\n      checklistItemsData.append(\"image\", image, title);\r\n      checklistItemsData.append(\"checklistId\", checklistId);\r\n      checklistItemsData.append(\"isDone\",  (isDone==true?'true':'false'));\r\n    //checklistItemsData.append(\"checklistItemsItems\",checklistItemsItems);\r\n    } else {\r\n      checklistItemsData = {\r\n        id: id,\r\n        title: title,\r\n        description: description,\r\n        imagePath: image,\r\n        checklistId: checklistId,\r\n        isDone: isDone\r\n      };\r\n      //console.log(\"checklistItemsData.isDone\" + checklistItemsData.isDone);\r\n    }\r\n    this.http\r\n      .put(\"http://localhost:3000/api/checklistItems/\" + id, checklistItemsData)\r\n      .subscribe(response => {\r\n        if(redirectToList)\r\n          //this.router.navigate([\"/checklistItem-list/\" + checklistId]);\r\n          this.router.navigate([\"/checklist-edit/\" + checklistId]);\r\n      });\r\n  }\r\n\r\n  deleteChecklistItems(checklistItemsId: string) {\r\n    return this.http\r\n      .delete(\"http://localhost:3000/api/checklistItems/\" + checklistItemsId);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Checklist } from \"../Model/checklist.model\";\r\nimport { group } from \"@angular/animations\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ChecklistsService {\r\n  private checklists: Checklist[] = [];\r\n  private checklistsUpdated = new Subject<{ checklists: Checklist[]; checklistCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getChecklists(checklistsPerPage: number, currentPage: number, group: string, filter:string=\"\") {\r\n    const queryParams = `?pagesize=${checklistsPerPage}&page=${currentPage}&group=${group}&filter=${filter}`;\r\n  //console.log(filter);\r\n    this.http\r\n      .get<{ message: string; checklists: any; maxChecklists: number }>(\r\n        \"http://localhost:3000/api/checklists\" + queryParams\r\n      )\r\n      .pipe(\r\n        map(checklistData => {\r\n          return {\r\n            checklists: checklistData.checklists.map(checklist => {\r\n              return {\r\n                id: checklist._id,\r\n                title: checklist.title,\r\n                description: checklist.description,\r\n                imagePath: checklist.imagePath,\r\n                group: checklist.group\r\n              };\r\n            }),\r\n            maxChecklists: checklistData.maxChecklists\r\n          };\r\n        })\r\n      )\r\n      .subscribe(transformedChecklistData => {\r\n        this.checklists = transformedChecklistData.checklists;\r\n        this.checklistsUpdated.next({\r\n          checklists: [...this.checklists],\r\n          checklistCount: transformedChecklistData.maxChecklists\r\n        });\r\n      });\r\n  }\r\n\r\n  getChecklistUpdateListener() {\r\n    return this.checklistsUpdated.asObservable();\r\n  }\r\n\r\n  getChecklist(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      description: string;\r\n      imagePath: string;\r\n      group : string;\r\n      checklistItems: [string];\r\n    }>(\"http://localhost:3000/api/checklists/\" + id);\r\n  }\r\n\r\n  addChecklist(title: string, description: string, image: File , group: string) {\r\n    const checklistData = new FormData();\r\n    checklistData.append(\"title\", title);\r\n    checklistData.append(\"description\", description);\r\n    checklistData.append(\"image\", image, title);\r\n    checklistData.append(\"group\", group);\r\n    //console.log(group);\r\n    //checklistData.append(\"checklistItems\",checklistItems);\r\n    this.http\r\n      .post<{ message: string; checklist: Checklist }>(\r\n        \"http://localhost:3000/api/checklists\",\r\n        checklistData\r\n      )\r\n      .subscribe(responseData => {\r\n        //this.router.navigate([\"/checklist-list/\" + group]);\r\n        this.router.navigate([\"/group-edit/\" + group]);\r\n      });\r\n  }\r\n\r\n  updateChecklist(id: string, title: string, description: string, image: File | string, group: string, checklistItems: [string]) {\r\n    let checklistData: Checklist | FormData;\r\n    if (typeof image === \"object\") {\r\n      checklistData = new FormData();\r\n      checklistData.append(\"id\", id);\r\n      checklistData.append(\"title\", title);\r\n      checklistData.append(\"description\", description);\r\n      checklistData.append(\"image\", image, title);\r\n      checklistData.append(\"group\", group);\r\n    //checklistData.append(\"checklistItems\",checklistItems);\r\n    } else {\r\n      checklistData = {\r\n        id: id,\r\n        title: title,\r\n        description: description,\r\n        imagePath: image,\r\n        group: group,\r\n        checklistItems: checklistItems\r\n      };\r\n    }\r\n    this.http\r\n      .put(\"http://localhost:3000/api/checklists/\" + id, checklistData)\r\n      .subscribe(response => {\r\n        this.router.navigate([\"/group-edit/\" + group]);\r\n        //this.router.navigate([\"/checklist-list/\" + group]);\r\n      });\r\n  }\r\n\r\n  deleteChecklist(checklistId: string) {\r\n    return this.http\r\n      .delete(\"http://localhost:3000/api/checklists/\" + checklistId);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Group } from \"./../Model/group.model\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class GroupsHLLService {\r\n  private groups: Group[] = [];\r\n  private groupsUpdated = new Subject<{ groups: Group[]; groupCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getGroupHLL() {\r\n    return this.http.get<{\r\n      data: number;\r\n      //title: string;\r\n      //description: string;\r\n      //imagePath: string;\r\n    }>(\"http://localhost:3000/api/groupsHLL/\" );\r\n  }\r\n\r\n  getGroupChecklistsCount() {\r\n    return this.http.get<{\r\n      _id: string;\r\n      count: number;\r\n    }>(\"http://localhost:3000/api/groupsChecklists/\" );\r\n  }\r\n\r\n  getGroupChecklistsCountTop10() {\r\n    return this.http.get<{\r\n      //_id: string;\r\n      title: string;\r\n      ChecklistsCount: number;\r\n    }>(\"http://localhost:3000/api/groupsChecklists\" );\r\n  }\r\n  \r\n  getGroupChecklistsCountJSON() {\r\n    return this.http.get(\"http://localhost:3000/api/groupsChecklists/\" );\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Group } from \"./../Model/group.model\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class GroupsService {\r\n  private groups: Group[] = [];\r\n  private groupsUpdated = new Subject<{ groups: Group[]; groupCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getGroups(groupsPerPage: number, currentPage: number, filter:string=\"\") {\r\n    const queryParams = `?pagesize=${groupsPerPage}&page=${currentPage}&filter=${filter}`;\r\n    //console.log(\"pagesize=${groupsPerPage}\" + groupsPerPage);\r\n    this.http\r\n      .get<{ message: string; groups: any; maxGroups: number }>(\r\n        \"http://localhost:3000/api/groups\" + queryParams\r\n      )\r\n      .pipe(\r\n        map(groupData => {\r\n          return {\r\n            groups: groupData.groups.map(group => {\r\n              return {\r\n                title: group.title,\r\n                description: group.description,\r\n                id: group._id,\r\n                imagePath: group.imagePath,\r\n                checklist: null\r\n              };\r\n            }),\r\n            maxGroups: groupData.maxGroups\r\n          };\r\n        })\r\n      )\r\n      .subscribe(transformedGroupData => {\r\n        this.groups = transformedGroupData.groups;\r\n        this.groupsUpdated.next({\r\n          groups: [...this.groups],\r\n          groupCount: transformedGroupData.maxGroups\r\n        });\r\n      });\r\n  }\r\n\r\n  getGroupUpdateListener() {\r\n    return this.groupsUpdated.asObservable();\r\n  }\r\n\r\n  getGroup(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      description: string;\r\n      imagePath: string;\r\n    }>(\"http://localhost:3000/api/groups/\" + id);\r\n  }\r\n\r\n  addGroup(title: string, description: string, image: File) {\r\n    const groupData = new FormData();\r\n    groupData.append(\"title\", title);\r\n    groupData.append(\"description\", description);\r\n    groupData.append(\"image\", image, title);\r\n    this.http\r\n      .post<{ message: string; group: Group }>(\r\n        \"http://localhost:3000/api/groups\",\r\n        groupData\r\n      )\r\n      .subscribe(responseData => {\r\n        this.router.navigate([\"/group-list\"]);\r\n      });\r\n  }\r\n\r\n  updateGroup(id: string, title: string, description: string, image: File | string) {\r\n    let groupData: Group | FormData;\r\n    if (typeof image === \"object\") {\r\n      groupData = new FormData();\r\n      groupData.append(\"id\", id);\r\n      groupData.append(\"title\", title);\r\n      groupData.append(\"description\", description);\r\n      groupData.append(\"image\", image, title);\r\n    } else {\r\n      groupData = {\r\n        id: id,\r\n        title: title,\r\n        description: description,\r\n        imagePath: image\r\n      };\r\n    }\r\n    this.http\r\n      .put(\"http://localhost:3000/api/groups/\" + id, groupData)\r\n      .subscribe(response => {\r\n        this.router.navigate([\"/group-list\"]);\r\n      });\r\n  }\r\n\r\n  deleteGroup(groupId: string) {\r\n    return this.http\r\n      .delete(\"http://localhost:3000/api/groups/\" + groupId);\r\n  }\r\n}\r\n","/*\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Observer } from 'rxjs';\r\n//import { Message } from '../model/message';\r\n//import { Event } from '../model/event';\r\nimport * as socketIo from 'socket.io-client';\r\nconst SERVER_URL = 'http://localhost:8080';\r\n@Injectable()\r\nexport class SocketService {\r\n  private socket;\r\n  public initSocket(): void {\r\n    SocketService.socket = socketIo(SERVER_URL);\r\n  }\r\n  public send(message: Message): void {\r\n    SocketService.socket.emit('message', message);\r\n  }\r\n  public onMessage(): Observable<Message> {\r\n    return new Observable<Message>(observer => {\r\n      SocketService.socket.on('message', (data: Message) => observer.next(data));\r\n      });\r\n  }\r\n  public onEvent(event: Event): Observable<any> {\r\n    return new Observable<Event>(observer => {\r\n      SocketService.socket.on(event, () => observer.next());\r\n    });\r\n  }\r\n}*/\r\n\r\n\r\nimport * as io from 'socket.io-client';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SocketService {\r\n    private url = 'http://localhost:3000';\r\n    public static socket;\r\n\r\n    constructor() {\r\n        if (!SocketService.socket) \r\n            SocketService.socket = io(this.url), {transports: ['websocket']};\r\n    }\r\n\r\n    public sendMessage(message) {\r\n        SocketService.socket.emit('GroupAdded', message);\r\n    }\r\n\r\n    public getMessages = () => {\r\n        //console.log(\"getMessages\");\r\n        return Observable.create((observer) => {\r\n            SocketService.socket.on('GroupAdded', (message) => {\r\n                observer.next(message);\r\n            });\r\n        });\r\n    }\r\n\r\n    public closeUserSocket(){\r\n        // Setup the socket namespace subscription\r\nif (!SocketService.socket) {\r\n    // Initialize user permissions socket\r\n    //SocketService.socket = io(NTC_API_URL + `/user/${SocketService.socket.userID}`, { secure: true });\r\n}\r\n\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { User } from \"../Model/user\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UsersService {\r\n  private users: User[] = [];\r\n  private usersUpdated = new Subject<{ users: User[]; userCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getUsers(usersPerPage: number, currentPage: number, filter:string=\"\") {\r\n    const queryParams = `?pagesize=${usersPerPage}&page=${currentPage}&filter=${filter}`;\r\n    this.http\r\n      .get<{ message: string; users: any; maxUsers: number }>(\r\n        \"http://localhost:3000/api/users\" + queryParams\r\n      )\r\n      .pipe(\r\n        map(userData => {\r\n          //console.log(userData);\r\n\r\n          return {\r\n            users: userData.users.map(user => {\r\n              //console.log(user);\r\n              return {\r\n                email: user.email,\r\n                address: user.address,\r\n                longitude: user.location[0],\r\n                latitude: user.location[1]\r\n              };\r\n            }),\r\n            maxUsers: userData.maxUsers\r\n          };\r\n        })\r\n      )\r\n      .subscribe(transformedUserData => {\r\n        this.users = transformedUserData.users;\r\n        this.usersUpdated.next({\r\n          users: [...this.users],\r\n          userCount: transformedUserData.maxUsers\r\n        });\r\n      });\r\n  }\r\n\r\n  getUserUpdateListener() {\r\n    return this.usersUpdated.asObservable();\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      email: string;\r\n      address: string;\r\n      longitude: string;\r\n      latitude: string;\r\n    }>(\"http://localhost:3000/api/users/\" + id);\r\n  }\r\n\r\n  addUser(email: string, password:string, address: string, longitude: number, latitude: number) {\r\n\r\n    //console.log(\"m:\" + email + \"p:\" + password + \"ad:\" + address+ \"long:\"+  (longitude+\"\") + (latitude+\"\"));\r\n\r\n    const userData = new FormData();\r\n    userData.append(\"username\", email);\r\n    userData.append(\"password\", password);\r\n    userData.append(\"email\", email);\r\n    userData.append(\"address\", address);\r\n    userData.append(\"longitude\", longitude + \"\");\r\n    userData.append(\"latitude\", latitude + \"\" );\r\n    this.http\r\n      .post<{ message: string; userData: User }>(\r\n        \"http://localhost:3000/api/users\",\r\n        userData\r\n      )\r\n      .subscribe(responseData => {\r\n        this.router.navigate([\"/group-list\"]);\r\n      });\r\n  }\r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(fileReader.result).subarray(0, 4);\r\n        let header = \"\";\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyBjgbPR6xJJ1VsP2yRopHw470deVoMD8MY\",\r\n    authDomain: \"smartlistios-7a38f.firebaseapp.com\",\r\n    databaseURL: \"https://smartlistios-7a38f.firebaseio.com\",\r\n    projectId: \"smartlistios-7a38f\",\r\n    storageBucket: \"smartlistios-7a38f.appspot.com\",\r\n    messagingSenderId: \"837625752367\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}